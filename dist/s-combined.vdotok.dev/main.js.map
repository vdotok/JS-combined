{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/chat/add-group/add-group.component.ts","./src/app/components/chat/add-group/add-group.component.html","./src/app/components/chat/chat.component.ts","./src/app/components/chat/chat.component.html","./src/app/components/chat/new-chat/new-chat.component.ts","./src/app/components/chat/new-chat/new-chat.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/sign-up/sign-up.component.ts","./src/app/components/sign-up/sign-up.component.html","./src/app/shared/FormsHandler/FormsHandler.ts","./src/app/shared/FormsHandler/get-errors.component.ts","./src/app/shared/app-material/app-material.module.ts","./src/app/shared/auth/auth-guard.service.ts","./src/app/shared/auth/auth.service.ts","./src/app/shared/helpers/helpersFunctions.ts","./src/app/shared/pipe/filter.ts","./src/app/shared/pipe/formatTime.ts","./src/app/shared/pipe/safeurl.ts","./src/app/shared/services/base.service.ts","./src/app/shared/services/http.service.ts","./src/app/shared/services/pubsub.service.ts","./src/app/shared/services/storage.service.ts","./src/app/shared/services/vdk-m2m-call.service.ts","./src/app/shared/services/vdk-one2one-call.service.ts","./src/app/shared/shared.module.ts","./src/app/shared/validators.ts","./src/constants/const.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ChatComponent } from './components/chat/chat.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\r\nimport { AuthGuard } from './shared/auth/auth-guard.service';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'signup',\r\n    component: SignUpComponent\r\n  },\r\n  {\r\n    path: 'chat',\r\n    component: ChatComponent,\r\n    canActivate: [AuthGuard]\r\n  },\r\n  { path: '**', redirectTo: 'login' },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, {})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `<router-outlet></router-outlet>`\r\n})\r\nexport class AppComponent {\r\n  constructor() { }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ChatComponent } from './components/chat/chat.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppMaterialModule } from './shared/app-material/app-material.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { AddGroupComponent } from './components/chat/add-group/add-group.component';\r\nimport { NewChatComponent } from './components/chat/new-chat/new-chat.component';\r\nimport { ToastrModule } from 'ngx-toastr';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    ChatComponent,\r\n    AddGroupComponent,\r\n    LoginComponent,\r\n    NewChatComponent,\r\n    SignUpComponent\r\n  ],\r\n  imports: [\r\n    SharedModule,\r\n    ReactiveFormsModule,\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CommonModule,\r\n    BrowserAnimationsModule,\r\n    AppMaterialModule,\r\n    HttpClientModule,\r\n    ToastrModule.forRoot({\r\n      maxOpened: 1,\r\n      preventDuplicates: true\r\n    })\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { ChangeDetectorRef, Component, ElementRef, EventEmitter, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport FormsHandler from 'src/app/shared/FormsHandler/FormsHandler';\r\nimport { BaseService } from 'src/app/shared/services/base.service';\r\nimport { PubsubService } from 'src/app/shared/services/pubsub.service';\r\nimport { StorageService } from 'src/app/shared/services/storage.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { fromEvent } from 'rxjs/internal/observable/fromEvent';\r\nimport { map } from 'rxjs/internal/operators/map';\r\nimport { debounceTime } from 'rxjs/internal/operators/debounceTime';\r\nimport { distinctUntilChanged } from 'rxjs/internal/operators/distinctUntilChanged';\r\nimport { mergeMap } from 'rxjs/internal/operators/mergeMap';\r\nimport { startWith } from 'rxjs/operators';\r\nimport { of } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'add-group',\r\n  templateUrl: './add-group.component.html',\r\n  styleUrls: ['./add-group.component.scss']\r\n})\r\nexport class AddGroupComponent implements OnInit {\r\n  currentUserName = StorageService.getAuthUsername();\r\n  currentUserData = StorageService.getUserData();\r\n  @Output() changeEvent = new EventEmitter<string>();\r\n  form: UntypedFormGroup;\r\n  loading = true;\r\n  addGroupModel = false;\r\n  AllUsers = [];\r\n  activeChat: any = {\r\n    chatHistory: []\r\n  };\r\n  message: string = '';\r\n  group_title = '';\r\n  groupnameError = '';\r\n  dialogRef;\r\n  selectedUsers = [];\r\n  CopyAllUsers = [];\r\n  @ViewChild('searchInput') searchInput: ElementRef;\r\n  @Output() setActiveChat = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    public pubsubService: PubsubService,\r\n    private svc: BaseService,\r\n    private toastr: ToastrService,\r\n    private _fb: UntypedFormBuilder,\r\n    private changeDetector: ChangeDetectorRef,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this._fb.group({\r\n      'group_title': new UntypedFormControl('', [Validators.required, Validators.maxLength(100)]),\r\n    }, { updateOn: 'change' });\r\n\r\n    document.addEventListener(\"keyup\", event => {\r\n      if (event.code === 'Enter' && !this.loading) {\r\n        this.addGroup();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.searchInput) {\r\n      fromEvent(this.searchInput.nativeElement, 'input')\r\n        .pipe(\r\n          map((event: Event) => (event.target as HTMLInputElement).value),\r\n          debounceTime(1000),\r\n          distinctUntilChanged(),\r\n          startWith(''),\r\n          mergeMap(value => {\r\n            this.loading = true;\r\n            if (!value) {\r\n              const data = {\r\n                sorting: \"ORDER BY full_name ASC\",\r\n                search_field: \"full_name\",\r\n                search_value: '',\r\n                condition: \"contains\",\r\n              }\r\n              return this.svc.post('AllUsers', data).pipe(map(res => {\r\n                if(!(res.users && res.users.length))\r\n                {\r\n                  res.users = [];\r\n                }\r\n                this.CopyAllUsers = [...res.users];\r\n                return res;\r\n              }))\r\n            }\r\n            const temparaay = [...this.CopyAllUsers];\r\n            const filteruser = temparaay.filter(user => {\r\n              let searchValue = value.toLowerCase();\r\n              if (user.full_name.toLowerCase().startsWith(searchValue)) { return -1; }\r\n            });\r\n            const returnData = {\r\n              users: filteruser\r\n            }\r\n            return of(returnData)\r\n          }),\r\n        )\r\n        .subscribe(res => {\r\n          this.loading = false;\r\n          if (!res.users || !res.users.length) {\r\n            this.toastr.error(\"Opps!\", \"No contacts found\");\r\n            this.AllUsers = [];\r\n          } else {\r\n            this.AllUsers = res.users;\r\n          }\r\n          this.setAlreadySelected();\r\n        })\r\n    }\r\n  }\r\n\r\n  setAlreadySelected() {\r\n    this.selectedUsers.map(user => {\r\n      const userIndex = this.AllUsers.find(alluser => alluser.user_id == user.user_id);\r\n      if (userIndex) userIndex['selected'] = true;\r\n    });\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  selectContact(contact) {\r\n    this.groupnameError = '';\r\n    contact['selected'] = !contact['selected'];\r\n    this.changeDetector.detectChanges();\r\n    this.selectedUsers.push(contact);\r\n    this.selectedUsers = this.selectedUsers.filter(user => user.selected);\r\n    this.selectedUsers = [...new Set(this.selectedUsers)];\r\n    if (!this.selectedUsers.length) {\r\n      this.groupnameError = 'Please Select Contacts';\r\n    } else if (this.selectedUsers.length > 4) {\r\n      this.groupnameError = 'Participants cannot be more than 4';\r\n    }\r\n    console.error('groupnameError', this.groupnameError);\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  openDialog(content): void {\r\n    this.groupnameError = '';\r\n    this.selectedUsers = this.selectedUsers.filter(user => user.selected);\r\n    this.changeDetector.detectChanges();\r\n    if (!this.selectedUsers.length) {\r\n      this.groupnameError = 'Please Select Contacts';\r\n      return;\r\n    } else if (this.selectedUsers.length > 4) {\r\n      this.groupnameError = 'Participants cannot be more than 4';\r\n      return;\r\n    }\r\n    if (this.selectedUsers.length == 1) {\r\n      const useridArray = this.selectedUsers.map(user => user.user_id);\r\n      let data = {\r\n        participants: useridArray,\r\n        auto_created: useridArray.length > 1 ? 0 : 1,\r\n        group_title: \"One to One chat\",\r\n      }\r\n      this.svc.post('CreateGroup', data).subscribe(v => {\r\n        this.changeDetector.detectChanges();\r\n        if (v && v.status == 200) {\r\n          this.groupnameError = '';\r\n          this.setActiveChat.emit(v.group);\r\n          this.form.reset();\r\n        }\r\n        this.selectedUsers = [];\r\n        this.changeDetector.detectChanges();\r\n        this.loading = false;\r\n        this.changeEvent.emit(\"THREAD\");\r\n      });\r\n\r\n    } else {\r\n      this.addGroupModel = true;\r\n    }\r\n  }\r\n\r\n  addGroup() {  \r\n    FormsHandler.validateForm(this.form);\r\n    console.log(\"$$ before: \", this.selectedUsers)\r\n    const useridArray = this.selectedUsers.map(user => user.user_id);\r\n    console.log(\"userIdArray\" , useridArray);\r\n    if (this.form.invalid || !useridArray.length || this.loading) return;\r\n    if (useridArray.length > 5) {\r\n      this.toastr.error('OPPS!', 'participants Can not be more than 5!');\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    this.changeDetector.detectChanges();\r\n    let data = {\r\n      participants: useridArray,\r\n      auto_created: useridArray.length > 1 ? 0 : 1\r\n    }\r\n    data = {\r\n      ...data,\r\n      ...this.form.value\r\n    };\r\n    this.svc.post('CreateGroup', data).subscribe(v => {\r\n      this.changeDetector.detectChanges();\r\n      if (v && v.status == 200) {\r\n          console.log(\"$$ after: \", this.selectedUsers)\r\n          let participants_ref_ids = [];\r\n          this.selectedUsers.map((p) => {\r\n            participants_ref_ids.push(p.ref_id);\r\n          });\r\n          //participants_ref_ids.push(StorageService.getUserData().ref_id);\r\n          //ABM - M2M GROUP CASE:\r\n          const groupInfo = {\r\n            from: StorageService.getUserData().ref_id,\r\n            to: participants_ref_ids,\r\n            action: \"new\",\r\n            groupModel: v\r\n          };\r\n          console.log(\"$$ ** M2M = notification send on M2M group creation :\\n\\n\", groupInfo);\r\n          this.pubsubService.sendNotificationOnGroupUpdation(groupInfo);\r\n  \r\n          //\r\n        this.groupnameError = '';\r\n        this.setActiveChat.emit(v.group);\r\n        this.toastr.success('Success!', 'The group has been created!');\r\n        this.closemodel();\r\n        this.form.reset();\r\n      \r\n      }\r\n      this.selectedUsers = [];\r\n      this.changeDetector.detectChanges();\r\n      this.loading = false;\r\n    });\r\n  }\r\n  closemodel() {\r\n    this.selectedUsers = [];\r\n    this.addGroupModel = false;\r\n    this.AllUsers.forEach(element => element['selected'] = false);\r\n    this.changeEvent.emit(\"THREAD\");\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  backScreen() {\r\n    this.changeEvent.emit(\"CHAT\");\r\n  }\r\n\r\n}\r\n","<div class=\"newChatContainer\">\r\n  <div class=\"newChatHeader\">\r\n    <div class=\"newChatLeft hand\">\r\n      <img src=\"./assets/images/arrow-left.png\" class=\"arrowLeft hand\" (click)=\"backScreen()\" />\r\n      <p class=\"newChatHeading\">Create Group Chat</p>\r\n    </div>\r\n    <div class=\"newChatRight hand\" (click)=\"openDialog(content)\">\r\n      <img class=\"goodMark\" src=\"./assets/images/checkmark.png\" />\r\n    </div>\r\n  </div>\r\n  <div class=\"newChatSearchBox\">\r\n    <div class=\"input-group\">\r\n      <div class=\"input-group-prepend\">\r\n        <img src=\"./assets/images/search.png\" class=\"seacrchIcon\" />\r\n      </div>\r\n      <input type=\"text\" class=\"form-control\" placeholder=\"Search\" #searchInput />\r\n    </div>\r\n  </div>\r\n  <div class=\"newGrpChat\">\r\n    <p [ngClass]=\"groupnameError ? 'text-danger' :'cntct'\">\r\n      {{groupnameError ? groupnameError :'Select Contacts'}}\r\n    </p>\r\n  </div>\r\n  <div class=\"newListContainer max-height\">\r\n    <ng-container *ngFor=\"let user of AllUsers\">\r\n      <div class=\"contactListCard hand\" (click)=\"selectContact(user)\">\r\n        <div class=\"contactListCardLeft\">\r\n          <img src=\"./assets/images/user.png\" class=\"ListCardIcon\" />\r\n          <p class=\"ListCardName text-capitalize pb-1\">{{user.full_name}}</p>\r\n        </div>\r\n        <div class=\"selectuser contactListCardRight\" *ngIf=\"user['selected']\">\r\n          <img src=\"./assets/images/checkmark-circle.png\" class=\"ListCardButton\" />\r\n        </div>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n\r\n<div id=\"myModal\" class=\"modal\" *ngIf=\"addGroupModel\">\r\n  <div class=\"createChatPopup\">\r\n    <div class=\"chatPopupContent groupPopup\">\r\n      <div class=\"modalHeader\">\r\n        <p class=\"modalHeading\">Create a group chat</p>\r\n        <img src=\"./assets/images/cross.png\" class=\"modalCross hand\" (click)=\"closemodel()\" />\r\n      </div>\r\n      <div class=\"modalContent\">\r\n        <form [formGroup]=\"form\" class=\"w-100\" (submit)=\"addGroup()\">\r\n          <p class=\"modalContentHeading\">Name your group chat</p>\r\n          <input type=\"text\" class=\"form-control\" placeholder=\"ex: Deeper team\" formControlName=\"group_title\" />\r\n          <form-errors [control]=\"form.get('group_title')\"></form-errors>\r\n        </form>\r\n      </div>\r\n      <button type=\"submit\" class=\"btn doneButton mt-3\" (click)=\"addGroup()\" [disabled]=\"loading\">\r\n        DONE\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-template #content let-modal>\r\n  <div class=\"createChatPopup\">\r\n    <div class=\"chatPopupContent\">\r\n      <div class=\"modalHeader\">\r\n        <p class=\"modalHeading\">Create a group chat</p>\r\n        <img src=\"./assets/images/cross.png\" class=\"modalCross hand\" (click)=\"modal.dismiss('Cross click')\" />\r\n      </div>\r\n      <div class=\"modalContent\">\r\n        <form [formGroup]=\"form\" class=\"w-100\" (submit)=\"addGroup()\">\r\n          <p class=\"modalContentHeading\">Name your group chat</p>\r\n          <input type=\"text\" class=\"form-control\" placeholder=\"ex: Deeper team\" formControlName=\"group_title\" />\r\n          <form-errors [control]=\"form.get('group_title')\"></form-errors>\r\n        </form>\r\n      </div>\r\n      <button type=\"submit\" class=\"btn doneButton mt-3\" (click)=\"addGroup()\" [disabled]=\"loading\">\r\n        DONE\r\n      </button>\r\n    </div>\r\n  </div>\r\n</ng-template>","import { ChangeDetectorRef, Component, ElementRef, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { MatLegacyDialog as MatDialog } from '@angular/material/legacy-dialog';\r\nimport { Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { fromEvent } from 'rxjs/internal/observable/fromEvent';\r\nimport { debounceTime } from 'rxjs/internal/operators/debounceTime';\r\nimport { distinctUntilChanged } from 'rxjs/internal/operators/distinctUntilChanged';\r\nimport { map } from 'rxjs/internal/operators/map';\r\nimport { FindArrayObject } from 'src/app/shared/helpers/helpersFunctions';\r\nimport { BaseService } from 'src/app/shared/services/base.service';\r\nimport { PubsubService } from 'src/app/shared/services/pubsub.service';\r\nimport { StorageService } from 'src/app/shared/services/storage.service';\r\nimport { UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport FormsHandler from 'src/app/shared/FormsHandler/FormsHandler';\r\nimport { MessageModel, onlineOfflineModel, receiptModel, typingModel } from 'src/app/shared/models/chat';\r\nimport { Subscription, timer } from 'rxjs';\r\nimport { VdkM2MCallService } from 'src/app/shared/services/vdk-m2m-call.service';\r\nimport { VdkOne2OneCallService } from 'src/app/shared/services/vdk-one2one-call.service';\r\nimport {\r\n  EventEmitter,\r\n  Output,\r\n} from \"@angular/core\";\r\n@Component({\r\n  selector: 'chat',\r\n  templateUrl: './chat.component.html',\r\n  styleUrls: ['./chat.component.scss']\r\n})\r\nexport class ChatComponent implements OnInit {\r\n  @ViewChild('noCall') noCall: TemplateRef<any>;\r\n  @ViewChild('chatDuringCall') chatDuringCall: TemplateRef<any>;\r\n  @ViewChild('incommingAudioCall') incommingAudioCall: TemplateRef<any>;\r\n  @ViewChild('outgoingAudioCall') outgoingAudioCall: TemplateRef<any>;\r\n  @ViewChild('AudioCallInProgress') AudioCallInProgress: TemplateRef<any>;\r\n  @ViewChild('incommingVideoCall') incommingVideoCall: TemplateRef<any>;\r\n  @ViewChild('outgoingVideoCall') outgoingVideoCall: TemplateRef<any>;\r\n  @ViewChild('VideoCallInProgress') VideoCallInProgress: TemplateRef<any>;\r\n\r\n  @ViewChild('groupIncommingAudioCall') groupIncommingAudioCall: TemplateRef<any>;\r\n  @ViewChild('groupOutgoingAudioCall') groupOutgoingAudioCall: TemplateRef<any>;\r\n  @ViewChild('groupOngoingAudioCall') groupOngoingAudioCall: TemplateRef<any>;\r\n  @ViewChild('groupIncommingVideoCall') groupIncommingVideoCall: TemplateRef<any>;\r\n  @ViewChild('groupVideoCall') groupVideoCall: TemplateRef<any>;\r\n\r\n  @Output() setActiveChatt = new EventEmitter<string>();\r\n  @Output() changeEvent = new EventEmitter<string>();\r\n\r\n\r\n  ongoingCall = false;\r\n  editGroupModel = false;\r\n  groupForm: UntypedFormGroup;\r\n  loading = true;\r\n  AllGroups = [];\r\n  AllUsers = [];\r\n  CopyAllUsers = [];\r\n  activeChat: any = {\r\n    chatHistory: []\r\n  };\r\n  message: string = '';\r\n  currentUserName = StorageService.getAuthUsername();\r\n  currentUserData = StorageService.getUserData();\r\n  @ViewChild('messageInputElement') messageInputElement: ElementRef;\r\n  threadType = 'THREAD';\r\n  fileToSend: File = null;\r\n  isActiveThread = false;\r\n  popupimagesrc = '';\r\n  screen = 'CHAT';\r\n  sdkconnected = false;\r\n  setToActive = null;\r\n  countDownTime: Subscription;\r\n  showChat: true;\r\n  callTime = 0;\r\n  groupOutgoingVideoCall = false;\r\n  calling = {\r\n    participant: [],\r\n    callType: 'video',\r\n    templateName: 'noCall',\r\n    callerName: '',\r\n    from: \"\",\r\n    session: \"\",\r\n    uuid:\"\"\r\n  }\r\n\r\n  settings = {\r\n    isOnInProgressCamara: true,\r\n    isOnInProgressMicrophone: true\r\n  }\r\n\r\n  get selectedTemplate() {\r\n    const templateList = {\r\n      noCall: this.noCall,\r\n      incommingAudioCall: this.incommingAudioCall,\r\n      outgoingAudioCall: this.outgoingAudioCall,\r\n      AudioCallInProgress: this.AudioCallInProgress,\r\n      incommingVideoCall: this.incommingVideoCall,\r\n      outgoingVideoCall: this.outgoingVideoCall,\r\n      VideoCallInProgress: this.VideoCallInProgress,\r\n      groupIncommingAudioCall: this.groupIncommingAudioCall,\r\n      groupOutgoingAudioCall: this.groupOutgoingAudioCall,\r\n      groupOngoingAudioCall: this.groupOngoingAudioCall,\r\n      groupIncommingVideoCall: this.groupIncommingVideoCall,\r\n      groupVideoCall: this.groupVideoCall\r\n    }\r\n    return templateList[this.calling.templateName];\r\n  }\r\n\r\n  constructor(\r\n    public pubsubService: PubsubService,\r\n    public vdkOne2OneCallSVC: VdkOne2OneCallService,\r\n    public vdkM2MCallSVC: VdkM2MCallService,\r\n    private svc: BaseService,\r\n    private router: Router,\r\n    private elRef: ElementRef,\r\n    public dialog: MatDialog,\r\n    private toastr: ToastrService,\r\n    private changeDetector: ChangeDetectorRef,\r\n    private _fb: UntypedFormBuilder\r\n  ) {\r\n    this.groupForm = this._fb.group({\r\n      'group_id': new UntypedFormControl('', [Validators.required]),\r\n      'group_title': new UntypedFormControl('', [Validators.required, Validators.maxLength(100)]),\r\n    }, { updateOn: 'change' });\r\n    this.pubsubService.initConfigure();\r\n    this.vdkOne2OneCallSVC.initConfigure();\r\n    // this.vdkM2MCallSVC.initConfigure();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.pubsubService.Client.on(\"connect\", response => {\r\n      console.log(\"connect\", response);\r\n      this.sdkconnected = true;\r\n      if (!this.AllGroups.length) {\r\n        this.getAllGroups();\r\n      }\r\n    });\r\n\r\n    this.pubsubService.Client.on(\"disconnect\", (response) => {\r\n      console.log(\"disconnect\", response);\r\n      this.sdkconnected = false;\r\n    });\r\n\r\n    this.vdkOne2OneCallSVC.Client.on(\"register\", response => {\r\n      console.log(\"register response\", response);\r\n    });\r\n\r\n    this.vdkOne2OneCallSVC.Client.on(\"connected\", response => {\r\n      this.sdkconnected = true;\r\n      console.log(\"connected response\", response);\r\n    });\r\n\r\n    this.vdkOne2OneCallSVC.Client.on(\"call\", response => {\r\n\r\n      console.log(\"call response\", response) ;\r\n      console.log(\"ongoing call\" , this.ongoingCall);\r\n\r\n      switch (response.type) {\r\n        case \"CALL_RECEIVED\":\r\n          if(this.ongoingCall){\r\n            this.vdkOne2OneCallSVC.rejectCall(response.from , false);\r\n            return;\r\n          }\r\n          this.calling.session = response.session;\r\n          this.calling.from = response.from;\r\n          this.changeDetector.detectChanges();\r\n          const full_name = this.findUserName(response.from);\r\n          this.calling.callerName = full_name;\r\n          this.calling.templateName = response.callType == 'video' ? 'incommingVideoCall' : 'incommingAudioCall';\r\n          this.calling.callType = response.callType;\r\n          this.calling.uuid = response.uuid;\r\n          this.changeDetector.detectChanges();\r\n          this.screen = 'MAIN';\r\n          break;\r\n        case \"CALL_ENDED\":\r\n          this.ongoingCall = false;\r\n          this.resetCall();\r\n          break;\r\n        case \"MISSED_CALL\":\r\n          this.resetCall();\r\n          this.toastr.error('You have Missed Call', 'Opps!')\r\n          break;\r\n        case \"CALL_REJECTED\":\r\n          this.ongoingCall = false\r\n          this.resetCall();\r\n          this.toastr.error('User is busy', \"Opps!\");\r\n          break;\r\n        case \"CALL_ACCEPTED\":\r\n          if (response.to) {\r\n            this.changeDetector.detectChanges();\r\n            this.calling.templateName = this.calling.callType == 'video' ? 'VideoCallInProgress' : 'AudioCallInProgress';\r\n            this.startWatch();\r\n            this.changeDetector.detectChanges();\r\n          }\r\n\r\n          break;\r\n        case \"CALL_STATUS\":\r\n          const displaystyle = response.video_status ? 'block' : 'none';\r\n          const callerHolderstyle = response.video_status ? 'none' : 'block';\r\n          if (document.getElementById('remoteVideo')) document.getElementById('remoteVideo').style.display = displaystyle;\r\n          if (document.getElementById('callerHolder')) document.getElementById('callerHolder').style.display = callerHolderstyle;\r\n          break;\r\n      }\r\n    });\r\n\r\n    // this.vdkM2MCallSVC.Client.on(\"connected\", responses => {\r\n    //   console.error(\"m2m connected response\", response);\r\n    // });\r\n\r\n    this.vdkOne2OneCallSVC.Client.on(\"groupCall\", response => {\r\n      console.log(\"groupCall response\", response);\r\n      switch (response.type) {\r\n\r\n        case \"CALL_RECEIVED\":\r\n          this.screen = 'MAIN'\r\n          this.calling.callerName = this.findUserName(response.from);\r\n          this.calling.templateName = response.callType == 'video' ? 'groupIncommingVideoCall' : 'groupIncommingAudioCall';\r\n          this.calling.callType = response.callType;\r\n          this.changeDetector.detectChanges();\r\n          break;\r\n        case \"NEW_PARTICIPANT\":\r\n          this.calling.templateName = this.calling.callType == 'video' ? 'groupVideoCall' : 'groupOngoingAudioCall';\r\n          this.groupOutgoingVideoCall = false;\r\n          this.addParticipant(response);\r\n          break;\r\n        case \"PARTICIPANT_LEFT\":\r\n          document.getElementById(\"sendInputContainer\").style.display = 'flex';\r\n          document.getElementById('roomNameText').style.display = \"block\";\r\n          document.getElementById('appendChatDuringCall').style.display = \"none\";\r\n          document.getElementById('returnedtocall').style.display = \"none\";\r\n          this.removeParticipant(response);\r\n          break;\r\n        case \"CALL_STARTED\":\r\n          this.startWatch();\r\n          break;\r\n        case \"PARTICIPANT_STATUS\":\r\n          const displaystyle = response.video_status ? 'block' : 'none';\r\n          if (document.getElementById(response.participant)) document.getElementById(response.participant).style.display = displaystyle;\r\n          break;\r\n      }\r\n    });\r\n  }\r\n  chatDCall()\r\n  {\r\n    return true;\r\n  }\r\n  ngAfterViewInit(): void {\r\n    document.addEventListener(\"keyup\", event => {\r\n      if (event.code === 'Enter') {\r\n        this.sendTextMessage();\r\n      }\r\n    });\r\n    this.getUsers();\r\n    this.pubsubService.Client.on(\"authentication_error\", (res: any) => {\r\n      console.log(\"authentication_error\", res);\r\n    });\r\n    this.pubsubService.Client.on(\"offline\", response => {\r\n      console.log(\"offline\", response);\r\n      this.setOfflineStatus(response);\r\n    });\r\n    this.pubsubService.Client.on(\"online\", (response: onlineOfflineModel) => {\r\n      console.log(\"online\", response);\r\n      this.setOnlineStatus(response);\r\n    });\r\n    this.pubsubService.Client.on(\"subscribed\", response => {\r\n      console.log(\"subscribed\", response);\r\n      this.setOnlineStatusforSubscribe(response);\r\n    });\r\n\r\n    this.pubsubService.Client.on(\"message\", response => {\r\n      console.log(\"$$$$ ** on-message response: \\n\\n\", response);\r\n      response = JSON.parse(JSON.stringify(response));\r\n      //console.trace(\"new message\", response);\r\n      if (response.data) {\r\n        this.updateGroup(response);\r\n      } \r\n      if (response.type == 'text' || response.type == 'file' || response.type == 'image' || response.type == 'audio' || response.type == 'video') {\r\n        console.log(\"$$$$ msg ni show horA: \", this);\r\n        \r\n        this.scroll();\r\n        const chatthread = this.findChatThread(response.to);\r\n        const isActiveThread = chatthread.id == this.activeChat.id;\r\n        chatthread['unReadCount'] = isActiveThread ? 0 : (chatthread['unReadCount'] || 0) + 1;\r\n        response = this.messageBy(chatthread, response);\r\n        response['isRead'] = isActiveThread;\r\n        response['auto_created'] = chatthread['auto_created'];\r\n        chatthread['lastMessage'] = response.content;\r\n        chatthread['time'] = new Date(response.id);\r\n        chatthread['type'] = response.type;\r\n        this.pushMessage(chatthread, response);\r\n        this.readSingleMessage(response, isActiveThread);\r\n        setTimeout(() => {\r\n          this.AllGroups.sort((a, b) => {\r\n            return a.id == chatthread.id ? -1 : 1;\r\n          });\r\n        }, 500);\r\n        this.changeDetector.detectChanges();\r\n      } else if (response.type == 'typing') {\r\n        this.setUserTyping(response);\r\n      } else if (response.receiptType == 3) {\r\n        let chName = response.topic || response.to;\r\n        if (response.to != undefined)\r\n          chName = response.to;\r\n        const chatthread = this.findChatThread(chName);\r\n        let message = FindArrayObject(chatthread.chatHistory, 'id', response.messageId);\r\n        if (message) {\r\n          message['readCount'] = (message['readCount'] || 0) + 1\r\n        }\r\n        this.changeDetector.detectChanges();\r\n      }\r\n    });\r\n\r\n\r\n\r\n\r\n    \r\n\r\n\r\n    if (this.messageInputElement) {\r\n      fromEvent(this.messageInputElement.nativeElement, 'input')\r\n        .pipe(\r\n          map((event: Event) => (event.target as HTMLInputElement).value),\r\n          debounceTime(3000),\r\n          distinctUntilChanged()\r\n        ).subscribe(data => {\r\n          const sendMessage: MessageModel = {\r\n            status: 0,\r\n            size: 0,\r\n            type: \"typing\",\r\n            isGroupMessage: false,\r\n            from: StorageService.getAuthUsername(),\r\n            content: '0',\r\n            id: new Date().getTime().toString(),\r\n            key: this.activeChat.channel_key,\r\n            to: this.activeChat.channel_name,\r\n            date: new Date().getTime(),\r\n          }\r\n          this.pubsubService.sendMessage(sendMessage);\r\n        });\r\n    }\r\n  }\r\n\r\n  updateGroup(grp_info) {\r\n    let new_group = grp_info.data.groupModel.group;\r\n    console.log(\"$$$$ in update group function \\n\\n\", {grp_info}, {new_group});\r\n\r\n    // return;\r\n    if(grp_info.data.action == \"new\") {\r\n      let i = this.AllGroups.findIndex((grp)=> grp.channel_name == new_group.channel_name);\r\n\r\n      if (i === -1) {\r\n        let chat = grp_info.data.groupModel.group;\r\n        let subscribedata = {\r\n          key: chat.channel_key,\r\n          channel: chat.channel_name,\r\n        };\r\n        let data = [];\r\n        data.push(subscribedata);\r\n        this.pubsubService.subscribeToChat(data);\r\n        console.log(\"!!!!!! grp\", subscribedata);\r\n\r\n        //this.pubsubService.subscribeToChat(data);\r\n        if (chat['participants'].length) {\r\n          chat['participants'] = chat['participants'].map(r => {\r\n          r['username'] = r['username'] || r['full_name'];\r\n          return r;\r\n        });\r\n        }\r\n        chat['chatTitle'] = chat.auto_created ? chat['participants'][0]['full_name'] : chat.group_title;\r\n        chat['Online'] = false;\r\n        chat['key'] = chat.channel_key;\r\n        chat['channel'] = chat.channel_name;\r\n        chat['chatHistory'] = [];\r\n        chat['TotalParticipants'] = chat['participants'].length;\r\n        chat['onlineParticipants'] = 1;\r\n        chat['isSeen'] = true;\r\n        console.log(\"!!! final grp before pushing: \\n\\n\",this,\"\\n\", chat, \"\\n\\n\" ,this.AllGroups);\r\n      \r\n        this.AllGroups.push(chat);\r\n        // this.setActiveChat(chat);\r\n        this.changeEvent.emit(\"THREAD\");\r\n        //chat.clicked_item = \"chat\";\r\n        this.setActiveChatt.emit(chat);\r\n        this.loading = false;\r\n\r\n        // console.log(\"** group added successfully\\n\", grp_info, \"\\n\");  //{new_group}, {index}, this.AllGroups\r\n      }\r\n         \r\n    }\r\n\r\n\r\n    if(grp_info.data.action == \"delete\") {\r\n      //console.log(\"$$ group deleted successfully-before\\n\" , this.AllGroups);\r\n      // let cn = grp_info.data.groupModel;\r\n      let index = this.AllGroups.findIndex((grp)=> grp.channel_name == new_group.channel_name);\r\n      if(index > -1) {\r\n        this.AllGroups.splice(index, 1);\r\n        this.pubsubService.unsubscribeToChat({key: new_group.channel_key, channel: new_group.channel_name});\r\n        this.activeChat = {};\r\n        this.changeDetector.detectChanges();\r\n      }\r\n      console.log(\"1234** group deleted successfully\\n\", grp_info,  \"\\n\", this.activeChat, this.loading, !this.activeChat.chatTitle && !this.loading);  //{new_group}, {index}, this.AllGroups\r\n    }\r\n\r\n\r\n    if(grp_info.data.action == \"modify\") {\r\n      let grp_ind = this.AllGroups.findIndex((g)=> g.channel_name === g.channel_name);  \r\n      // console.log(\"*** edit notification:\\n\", new_group, \"\\n\", this.AllGroups, \"\\n\");\r\n      if(grp_ind > -1) {\r\n        this.AllGroups[grp_ind].group_title = new_group.group_title;\r\n        this.AllGroups[grp_ind].chatTitle = new_group.group_title; \r\n        //console.log(\"*** edit notification:\\n\", new_group, \"\\n\", this.AllGroups, \"\\n\",new_group.group.group_title);\r\n      }\r\n      \r\n    }\r\n    \r\n    \r\n\r\n  }\r\n\r\n  //** */\r\n  editGroup() {\r\n    FormsHandler.validateForm(this.groupForm);\r\n    console.log(\"this.groupForm.\", this.groupForm.invalid);\r\n    if (this.groupForm.invalid || this.loading) return;\r\n    const playload = this.groupForm.value;\r\n    this.loading = true;\r\n    this.svc.post('RenameGroup', playload).subscribe(v => {\r\n      \r\n      if (v && v.status == 200) {\r\n        //this.getAllGroups(); //Commented this on 22-May-23 because chat history removed when rename group called\r\n\r\n        if(this.activeChat.group_id === playload.group_id && this.activeChat.auto_created === 0) {\r\n          console.log(\"&& rename group api calleds\", this.activeChat, playload);\r\n          this.activeChat.group_title = playload.group_title;\r\n          this.activeChat.chatTitle = playload.group_title;\r\n        }\r\n\r\n\r\n\r\n        //ABM\r\n        let participants_ref_ids = [];\r\n        v.group.participants.map((p) => {\r\n          participants_ref_ids.push(p.ref_id);\r\n        });\r\n        const groupInfo = {\r\n          from: StorageService.getUserData().ref_id,\r\n          to: participants_ref_ids,\r\n          action: \"modify\",\r\n          groupModel: v\r\n          \r\n        };\r\n        console.log(\"TT *** edit grppp  -sending side:\\n\", groupInfo, \"/nAPI response:\", v);\r\n        this.pubsubService.sendNotificationOnGroupUpdation(groupInfo);\r\n        //ABM\r\n\r\n        this.editGroupModel = false;\r\n        this.loading = false;\r\n        this.toastr.success('The group has been updated!', 'Success!');\r\n      }\r\n    });\r\n  }\r\n\r\n  //** */\r\n  deleteGroup(group) {\r\n    this.loading = true;\r\n    const playload = {\r\n      group_id: group.id\r\n    }\r\n    this.svc.post('DeleteGroup', playload).subscribe(v => {\r\n      this.changeDetector.detectChanges();\r\n      if (v && v.status == 200) {\r\n        this.loading = false;\r\n        //AMB\r\n        let participants_ref_ids = [];\r\n        group.participants.map((p) => {\r\n          participants_ref_ids.push(p.ref_id);\r\n        });\r\n        const groupInfo = {\r\n          from: StorageService.getUserData().ref_id,\r\n          to: participants_ref_ids,\r\n          action: \"delete\",\r\n          groupModel: v\r\n        };\r\n        //console.log(\"TT ** delete group: \", groupInfo, group);\r\n        this.pubsubService.sendNotificationOnGroupUpdation(groupInfo);\r\n        //ABM\r\n\r\n\r\n        this.getAllGroups();\r\n        this.activeChat = {};\r\n        this.loading = false;\r\n        this.toastr.success('The group has been deleted!', 'Success!');\r\n      } else {\r\n        console.error(v.message);\r\n        alert(v.message);\r\n        this.changeDetector.detectChanges();\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  getAllGroups() {\r\n    this.loading = true;\r\n    this.svc.get('AllGroups').subscribe(v => {\r\n      this.loading = false;\r\n      if (v && v.status == 200) {\r\n        this.AllGroups = v.groups.map(chat => {\r\n          if (chat['participants'].length) {\r\n            chat['participants'] = chat['participants'].map(r => {\r\n              r['username'] = r['username'] || r['full_name'];\r\n              return r;\r\n            });\r\n          }\r\n          chat['chatTitle'] = chat.auto_created ? chat['participants'][0]['full_name'] : chat.group_title;\r\n          chat['Online'] = false;\r\n          chat['key'] = chat.channel_key;\r\n          chat['channel'] = chat.channel_name;\r\n          chat['chatHistory'] = [];\r\n          chat['TotalParticipants'] = chat['participants'].length;\r\n          chat['onlineParticipants'] = 1;\r\n          chat['isSeen'] = true;\r\n          return chat;\r\n        });\r\n\r\n\r\n\r\n\r\n\r\n        console.log(\"this.activeChat.chatTitle\", this.activeChat);\r\n        if (!this.activeChat.chatTitle) {\r\n          this.activeChat = this.AllGroups.length ? this.AllGroups['0'] : {};\r\n        }\r\n        if (this.setToActive) {\r\n          const indexchat = this.AllGroups.find(group => group.id == this.setToActive)\r\n          this.activeChat = indexchat ? indexchat : this.AllGroups['0'];\r\n          this.setToActive = null;\r\n        }\r\n        this.isActiveThread = true;\r\n        console.log(\"this.activeChat.chatTitle\", this.activeChat);\r\n        this.pubsubService.subscribeToChat(this.AllGroups);\r\n      }\r\n      setTimeout(() => {\r\n        this.sortThread();\r\n      }, 500);\r\n      this.changeDetector.detectChanges();\r\n    });\r\n  }\r\n\r\n\r\n  getUsers() {\r\n    const data = {\r\n      sorting: \"ORDER BY full_name ASC\",\r\n      search_field: \"full_name\",\r\n      search_value: '',\r\n      condition: \"contains\",\r\n    }\r\n    this.svc.post('AllUsers', data).subscribe(res => {\r\n      this.loading = false;\r\n      if (res.status == 200) {\r\n        this.CopyAllUsers = [...res.users];\r\n        this.AllUsers = res.users;\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  openModal(group) {\r\n    if (group.auto_created) {\r\n      alert('Can not change One to one group title');\r\n      return;\r\n    }\r\n    group['group_id'] = group.id\r\n    this.groupForm.reset(group);\r\n    this.editGroupModel = true;\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n\r\n  checkFileType(content: any) {\r\n    let preview = content.includes('text/plain') ? ('./assets/images/txt.png') : content.includes('/pdf') ? ('./assets/images/pdf.png') : content.includes('/json') ? ('./assets/images/json.png') : 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/8a/Icon-doc.svg/810px-Icon-doc.svg.png';\r\n    if (content.includes('video/'))\r\n      preview = './assets/images/video.png';\r\n    if (content.includes('audio/'))\r\n      preview = './assets/images/audio.png';\r\n    return preview;\r\n  }\r\n\r\n\r\n  fileType(content: any) {\r\n    return content.split(\";\")[0].split(\":\")[1]\r\n  }\r\n\r\n\r\n  findChatThread(channel) {\r\n    return FindArrayObject(this.AllGroups, 'channel_name', channel);\r\n  }\r\n\r\n\r\n  setActiveChat(group) {\r\n    console.log(\"clicke\");\r\n    this.isActiveThread = group.id == this.activeChat.id;\r\n    if (!this.isActiveThread) this.message = '';\r\n    this.activeChat = group;\r\n    group['unReadCount'] = 0;\r\n    this.screen = 'MSG';\r\n    this.scroll();\r\n    group.chatHistory = group.chatHistory || [];\r\n    this.readsendMessage(group.chatHistory);\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n\r\n  setChatDuringCall(){\r\n    console.log(\"active chat\" , this.activeChat);\r\n    document.getElementById(\"returnedtocall\").style.display = 'flex';\r\n    document.getElementById('messagesBox').style.display = 'none';\r\n    document.getElementById('appendChatDuringCall').style.display = \"block\";\r\n    let el = document.getElementById(\"sendInputContainer\");\r\n    el.removeAttribute('hidden');\r\n    document.getElementById(\"sendInputContainer\").style.display = 'flex';\r\n    document.getElementById('roomNameText').style.display = \"block\";\r\n  }\r\n\r\n\r\n  returntoCall(){\r\n    document.getElementById('appendChatDuringCall').style.display = \"none\";\r\n    document.getElementById('returnedtocall').style.display = \"none\";\r\n    document.getElementById('messagesBox').style.display = 'block';\r\n    document.getElementById('roomNameText').style.display = \"none\";\r\n    document.getElementById(\"sendInputContainer\").style.display = 'none';\r\n  }\r\n\r\n\r\n  setchat(chat) {\r\n    \r\n    this.setActiveChat(chat);\r\n    this.setToActive = chat.id;\r\n    if(chat.clicked_item == \"audio\"){\r\n      this.startone2oneAudioCall();\r\n    }\r\n    if(chat.clicked_item == \"video\"){\r\n      this.startOne2OneVideoCall();\r\n    }\r\n  }\r\n\r\n\r\n  readSingleMessage(response, isActiveThread) {\r\n    if (response.from == this.currentUserName || !isActiveThread) return;\r\n    const chatobj: receiptModel = {\r\n      messageId: response.id,\r\n      receiptType: 3,\r\n      from: StorageService.getAuthUsername(),\r\n      key: response.key,\r\n      to: response.to,\r\n      date: new Date().getTime()\r\n    };\r\n    this.pubsubService.readSingleMessage(chatobj);\r\n  }\r\n\r\n\r\n  readsendMessage(chatHistory) {\r\n    const unreadchatHistory = chatHistory.filter(chat => !chat.isRead).map(chat => {\r\n      const chatobj: receiptModel = {\r\n        messageId: chat.id,\r\n        receiptType: 3,\r\n        from: StorageService.getAuthUsername(),\r\n        key: chat.key,\r\n        to: chat.to,\r\n        date: new Date().getTime()\r\n      };\r\n      return chatobj;\r\n    });\r\n    if (unreadchatHistory.length) this.pubsubService.readMessage(unreadchatHistory);\r\n    chatHistory = chatHistory.map(chat => {\r\n      chat.isRead = true;\r\n      return chat;\r\n    });\r\n  }\r\n\r\n\r\n  handleFileInput(files: FileList) {\r\n    this.fileToSend = files.item(0);\r\n  }\r\n\r\n\r\n  invalidSize() {\r\n    return ((this.fileToSend.size / 1024) > 6144);\r\n  }\r\n\r\n  removeAttachment() {\r\n    this.fileToSend = null;\r\n  }\r\n\r\n  getFileType(fileR) {\r\n    let type = \"file\";\r\n    const filetype = fileR.type;\r\n    if (filetype.includes('image')) type = \"image\";\r\n    else if (filetype.includes('audio')) type = \"audio\";\r\n    else if (filetype.includes('video')) type = \"video\";\r\n    return type;\r\n  }\r\n\r\n  sendTextMessage() {\r\n    if ((!(/\\S/.test(this.message))) && !this.fileToSend) {\r\n      return;\r\n    } else if (this.message.length > 400) {\r\n      this.toastr.error(\"Message can not be more than 400 characters\", \"Opps!\")\r\n      return;\r\n    } else if (this.fileToSend && this.invalidSize()) {\r\n      this.toastr.error(\"The maximum size of file should be 6MBs.\", \"Opps!\")\r\n      this.fileToSend = null;\r\n      return;\r\n    }\r\n    this.scroll();\r\n    if (!this.message && !this.fileToSend) return;\r\n    if (this.fileToSend) {\r\n      var option = {\r\n        id: new Date().getTime().toString(),\r\n        from: StorageService.getAuthUsername(),\r\n        topic: this.activeChat.channel_name,\r\n        to: this.activeChat.channel_name,\r\n        key: this.activeChat.channel_key,\r\n        type: this.getFileType(this.fileToSend),\r\n        date: new Date().getTime(),\r\n      };\r\n      console.log(\"file to send\", this.fileToSend);\r\n      const toBase64 = file => new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n      });\r\n      let base64 = toBase64(this.fileToSend);\r\n      console.log(\"base64444\", base64);\r\n      this.pubsubService.Client.SendFile(this.fileToSend, option);\r\n      this.fileToSend = null;\r\n    }\r\n    if (!this.message) return;\r\n    const sendMessage: MessageModel = {\r\n      status: 1,\r\n      size: 0,\r\n      type: \"text\",\r\n      isGroupMessage: false,\r\n      from: StorageService.getAuthUsername(),\r\n      content: this.message,\r\n      id: new Date().getTime().toString(),\r\n      date: new Date().getTime(),\r\n      key: this.activeChat.channel_key,\r\n      to: this.activeChat.channel_name\r\n    }\r\n    this.pubsubService.sendMessage(sendMessage);\r\n    this.message = '';\r\n    this.scroll();\r\n    if (!(this.AllGroups.length && this.activeChat.id == this.AllGroups[0].id)) {\r\n      this.sortThread();\r\n    }\r\n  }\r\n\r\n  typingmessage($event) {\r\n    if ($event.key === \"Enter\") {\r\n      this.sendTextMessage();\r\n      return;\r\n    }\r\n    const sendMessage: MessageModel = {\r\n      status: 0,\r\n      size: 0,\r\n      type: \"typing\",\r\n      isGroupMessage: false,\r\n      from: StorageService.getAuthUsername(),\r\n      content: \"1\",\r\n      id: new Date().getTime().toString(),\r\n      key: this.activeChat.channel_key,\r\n      to: this.activeChat.channel_name,\r\n      date: new Date().getTime(),\r\n    }\r\n    this.pubsubService.sendMessage(sendMessage);\r\n  }\r\n\r\n  setOnlineStatusforSubscribe(response: onlineOfflineModel) {\r\n    const indexchat = this.findChatThread(response.channel);\r\n    if (indexchat) {\r\n      let onlineNumbers = [...new Set(response.who.map(n => n.username))]\r\n      indexchat['onlineParticipants'] = onlineNumbers && onlineNumbers.length || 1;\r\n      if (indexchat && indexchat.auto_created) indexchat['Online'] = onlineNumbers.length > 1\r\n    }\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  setOnlineStatus(response: onlineOfflineModel) {\r\n    let indexchat = this.findChatThread(response.channel);\r\n    if (!indexchat) return;\r\n    if (indexchat.auto_created) indexchat['Online'] = true;\r\n    if (!indexchat.auto_created) {\r\n      indexchat['onlineParticipants'] = indexchat['onlineParticipants'] < indexchat['TotalParticipants'] ? indexchat['onlineParticipants'] + 1 : indexchat['onlineParticipants'];\r\n    }\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  setOfflineStatus(response: onlineOfflineModel) {\r\n    const indexchat = this.findChatThread(response.channel);\r\n    if (indexchat && indexchat.auto_created) indexchat['Online'] = false;\r\n    if (!indexchat.auto_created) {\r\n      indexchat['onlineParticipants'] = indexchat['onlineParticipants'] > 2 ? indexchat['onlineParticipants'] - 1 : 1;\r\n    }\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  setUserTyping(response: typingModel) {\r\n    if (response.from == this.currentUserData.ref_id) return;\r\n    let indexchat = FindArrayObject(this.AllGroups, 'channel_name', response.to);\r\n    let typinguser = indexchat[\"participants\"].find(e => e.ref_id == response.from);\r\n    if (response.content == '1') {\r\n      indexchat['TypingUserList'] = (indexchat['TypingUserList'] || []);\r\n      indexchat['TypingUserList'] = [...new Set([typinguser])];\r\n    } else if (response.content == '0') {\r\n      indexchat['TypingUserList'] = indexchat['TypingUserList'].filter(e => e.ref_id != response.from);\r\n    }\r\n    indexchat['userTyping'] = indexchat['TypingUserList'].length && response.content != '0';\r\n    let nameList = indexchat['TypingUserList'].map(userObj => userObj.full_name);\r\n    if (nameList.length == 1) {\r\n      indexchat['userTypingContent'] = nameList + ' ' + 'is typing...';\r\n    } else if (nameList.length == 2) {\r\n      indexchat['userTypingContent'] = nameList.join() + ' ' + 'are typing...';\r\n    } else if (nameList.length > 2) {\r\n      indexchat['userTypingContent'] = nameList.filter((i, j) => j < 2).join() + ' ' + 'and other are typing...';\r\n    }\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  setMultiUserTyping(response, typinguser, indexchat) {\r\n    if (response.content == '1') {\r\n      indexchat['TypingUserList'] = [...new Set(typinguser)];\r\n    } else if (response.content == '0') {\r\n      indexchat['TypingUserList'] = indexchat['TypingUserList'].filter(e => e.ref_id != response.from);\r\n    }\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  scroll(): void {\r\n    setTimeout(() => {\r\n      this.elRef.nativeElement.querySelector('.messagesBox').scrollTop = this.elRef.nativeElement.querySelector('.messagesBox').scrollHeight;\r\n    }, 500);\r\n  }\r\n\r\n  changeSidebar($event) {\r\n    this.threadType = $event;\r\n    if (this.threadType == 'THREAD') {\r\n      this.getAllGroups();\r\n    }\r\n  }\r\n\r\n  newChat() {\r\n    this.threadType = 'CHAT';\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  logout() {\r\n    this.pubsubService.Disconnect();\r\n    StorageService.clearLocalStorge();\r\n    this.router.navigate(['login']);\r\n  }\r\n\r\n  sortThread() {\r\n    if (this.activeChat.id) {\r\n      this.AllGroups.sort((a, b) => {\r\n        return a.id == this.activeChat.id ? -1 : 1;\r\n      });\r\n    }\r\n  }\r\n\r\n  messageBy(chatthread, response) {\r\n    if (this.isShowName(chatthread, response)) {\r\n      const messageByObj = FindArrayObject(chatthread.participants, 'ref_id', response.from);\r\n      response['messageBy'] = messageByObj && messageByObj.full_name || '';\r\n    }\r\n    return response;\r\n  }\r\n\r\n  isShowName(chatthread, response) {\r\n    if (chatthread['chatHistory'].length && response.from) {\r\n      const previourmessage = chatthread['chatHistory'][chatthread['chatHistory'].length - 1];\r\n      return previourmessage.from != response.from;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  pushMessage(thread, response) {\r\n    let newResponse = {};\r\n    newResponse = JSON.parse(JSON.stringify(response));\r\n    if (response.type == 'text' || !response.content) {\r\n      thread['chatHistory'].push(newResponse);\r\n    } else {\r\n      var foundIndex = thread.chatHistory.findIndex(x => x.id == response.id);\r\n      thread.chatHistory[foundIndex] = response;\r\n    }\r\n  }\r\n\r\n  getLastMessage(group): string {\r\n    const isactivethread = group.id == this.activeChat.id;\r\n    if (!isactivethread && group.unReadCount) {\r\n      return \"Misread messages\"\r\n    } else if (group.type != 'text') {\r\n      return group.type;\r\n    }\r\n    return group.lastMessage;\r\n  }\r\n\r\n  openImage(imagesrc): void {\r\n    this.popupimagesrc = imagesrc;\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  closeImage() {\r\n    this.popupimagesrc = null;\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  closeModal() {\r\n    this.editGroupModel = false;\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  isHideThread() {\r\n    return this.isMobile() ? this.screen != 'CHAT' : false;\r\n  }\r\n\r\n  isHideChatScreen() {\r\n    return this.isMobile() ? this.screen != 'MSG' : false;\r\n  }\r\n\r\n  backScreen() {\r\n    this.threadType = \"THREAD\";\r\n    this.screen = \"CHAT\";\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  isMobile() {\r\n    return window.innerWidth < 768\r\n  }\r\n\r\n\r\n  findUserName(ref_id: string): string {\r\n    const user = FindArrayObject(this.CopyAllUsers, 'ref_id', ref_id);\r\n    return user ? user.full_name : '';\r\n  }\r\n\r\n\r\n  resetCall() {\r\n    document.getElementById(\"sendInputContainer\").style.display = 'flex';\r\n    document.getElementById('roomNameText').style.display = \"block\";\r\n    document.getElementById('appendChatDuringCall').style.display = \"none\";\r\n    document.getElementById('returnedtocall').style.display = \"none\";\r\n\r\n    this.settings = {\r\n      isOnInProgressCamara: true,\r\n      isOnInProgressMicrophone: true\r\n    }\r\n    this.calling = {\r\n      participant: [],\r\n      callType: 'video',\r\n      templateName: 'noCall',\r\n      callerName: '',\r\n      from: \"\",\r\n      session: \"\",\r\n      uuid:\"\"\r\n    }\r\n    this.callTime = 0;\r\n    this.screen = 'LISTING';\r\n    if (this.countDownTime) {\r\n      this.countDownTime.unsubscribe()\r\n    }\r\n    if (document.getElementById('OutgoingVideo')) document.getElementById('OutgoingVideo').style.display = 'block';\r\n    this.changeDetector.detectChanges();\r\n    this.ongoingCall = false;\r\n  }\r\n  stopCall() {\r\n    document.getElementById(\"sendInputContainer\").style.display = 'flex';\r\n    document.getElementById('roomNameText').style.display = \"block\";\r\n    document.getElementById('appendChatDuringCall').style.display = \"none\";\r\n    document.getElementById('returnedtocall').style.display = \"none\";\r\n    this.ongoingCall = false;\r\n    this.calling.templateName = 'noCall';\r\n    this.vdkOne2OneCallSVC.endCall();\r\n    this.vdkOne2OneCallSVC.leaveGroupCall();\r\n    this.resetCall();\r\n    this.changeDetector.detectChanges();\r\n    console.log(\"stopCall\");\r\n  }\r\n\r\n  inCall(): boolean {\r\n    return this.calling.templateName != 'noCall';\r\n  }\r\n  startVideoCall() {\r\n    this.resetCall();\r\n    if (this.activeChat.auto_created) {\r\n      this.startOne2OneVideoCall();\r\n    } else {\r\n      this.startM2MVideoCall();\r\n    }\r\n  }\r\n  startOne2OneVideoCall() {\r\n    if (this.inCall()) return;\r\n    this.calling.session = 'one_to_one';\r\n    document.getElementById('OutgoingVideo').style.display = 'block';\r\n    this.startWatch();\r\n    this.screen = 'MAIN';\r\n    this.ongoingCall = true;\r\n    this.calling.templateName = 'outgoingVideoCall';\r\n    // this.calling['callerName'] = this.activeChat.chatTitle;\r\n    this.calling.callerName = this.activeChat.chatTitle ? this.activeChat.chatTitle : this.activeChat.group_title;\r\n\r\n    this.changeDetector.detectChanges();\r\n    const participantsList = this.activeChat.participants.filter(g => g.ref_id != this.currentUserName).map(g => g.ref_id);\r\n    const params = {\r\n      localVideo: document.getElementById(\"localVideo\"),\r\n      remoteVideo: document.getElementById(\"remoteVideo\"),\r\n      to: [...participantsList],\r\n      audio:1,\r\n      video:1\r\n    }\r\n    this.vdkOne2OneCallSVC.Call(params);\r\n  }\r\n\r\n  startM2MVideoCall() {\r\n    if (this.inCall()) return;\r\n    const p = this.getChatParticipants();\r\n    if (!p.length) {\r\n      this.toastr.error('Please select someone to call!', 'Opps!')\r\n      return;\r\n    }\r\n    this.ongoingCall = true;\r\n    this.screen = 'MAIN';\r\n    this.groupOutgoingVideoCall = true;\r\n    this.calling.templateName = 'groupVideoCall';\r\n    this.calling['callerName'] = this.activeChat.chatTitle;\r\n    this.changeDetector.detectChanges();\r\n    const params = {\r\n      callType: \"video\",\r\n      localVideo: document.getElementById(\"localVideo\"),\r\n      to: [...p],\r\n      video:1,\r\n      audio:1,\r\n      timeout: 40,\r\n      isPeer: 0\r\n    }\r\n    this.vdkOne2OneCallSVC.groupCall(params);\r\n  }\r\n\r\n  acceptcall() {\r\n    console.log(\"acceptcall\");\r\n    if (this.calling.session == 'one_to_one') {\r\n      console.log(\"acceptcall one_to_one\");\r\n      this.acceptOne2oneCall();\r\n    } else {\r\n      console.log(\"acceptcall acceptM2MCall\");\r\n      this.acceptM2MCall();\r\n    }\r\n  }\r\n\r\n  acceptOne2oneCall() {\r\n    this.vdkOne2OneCallSVC.acceptCall(\r\n      {\r\n        localVideo: document.getElementById(\"localVideo\"),\r\n        remoteVideo: document.getElementById(\"remoteVideo\"),\r\n        sessionUUID:this.calling.uuid,\r\n        audio:1,\r\n        video:this.calling.callType == 'video'\r\n      });\r\n    this.changeDetector.detectChanges();\r\n    this.calling.templateName = this.calling.callType == 'video' ? 'VideoCallInProgress' : 'AudioCallInProgress';\r\n    this.startWatch();\r\n    this.ongoingCall = true;\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  acceptM2MCall() {\r\n    if (this.isM2MProgressCall()) return;\r\n    this.ongoingCall = true;\r\n    this.calling.templateName = this.calling.callType == 'video' ? 'groupVideoCall' : 'groupOngoingAudioCall';\r\n    this.changeDetector.detectChanges();\r\n    const params = {\r\n      localVideo: document.getElementById(\"localVideo\"),\r\n      callType: this.calling.callType\r\n    }\r\n    this.startWatch();\r\n    this.changeDetector.detectChanges();\r\n    this.groupOutgoingVideoCall = false;\r\n    this.vdkOne2OneCallSVC.joinGroupCall(params);\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n  startWatch() {\r\n    //console.trace()\r\n    if (!this.callTime) {\r\n      this.countDownTime = timer(0, 1000).subscribe(() => ++this.callTime);\r\n    }\r\n  }\r\n\r\n  startAudioCall() {\r\n    if (this.activeChat.auto_created) {\r\n      this.startone2oneAudioCall();\r\n    } else {\r\n      this.startm2mAudioCall();\r\n    }\r\n  }\r\n\r\n  startone2oneAudioCall() {\r\n    if (this.inCall()) return;\r\n    const participantsList = this.getChatParticipants();\r\n    if (!participantsList.length) {\r\n      this.toastr.error('Please select someone to call!', 'Opps!')\r\n      return;\r\n    }\r\n    this.calling.session = 'one_to_one';\r\n    this.calling.callType = 'audio';\r\n    this.ongoingCall = true;\r\n    this.screen = 'MAIN';\r\n    this.calling.templateName = 'outgoingAudioCall';\r\n    this.calling.callerName = this.activeChat.chatTitle ? this.activeChat.chatTitle : this.activeChat.group_title;\r\n\r\n    const params = {\r\n      localVideo: document.getElementById(\"localVideo\"),\r\n      remoteVideo: document.getElementById(\"remoteVideo\"),\r\n      to: [...participantsList],\r\n      data: { calleName: this.currentUserData.full_name }\r\n    }\r\n    this.vdkOne2OneCallSVC.audioCall(params);\r\n  }\r\n\r\n  startm2mAudioCall() {\r\n    if (this.inCall()) return;\r\n    const participants = this.getChatParticipants();\r\n    if (!participants.length) {\r\n      this.toastr.error('Please select someone to call!', 'Opps!')\r\n      return;\r\n    }\r\n    this.calling.callType = 'audio';\r\n    this.ongoingCall = true;\r\n    this.screen = 'MAIN';\r\n    this.calling.templateName = 'groupOutgoingAudioCall';\r\n    this.calling['callerName'] = this.activeChat.chatTitle;\r\n\r\n    const params = {\r\n      callType: \"audio\",\r\n      localVideo: document.getElementById(\"localAudio\"),\r\n      to: [...participants],\r\n      video:0,\r\n      audio:1,\r\n      timeout: 40,\r\n      isPeer: 0\r\n    }\r\n    this.vdkOne2OneCallSVC.groupCall(params);\r\n  }\r\n\r\n  changeSettings(filed) {\r\n    if (this.calling.session == 'one_to_one') {\r\n      this.changeOne2OneSettings(filed);\r\n    } else {\r\n      this.changeM2MSettings(filed);\r\n    }\r\n  }\r\n\r\n  changeOne2OneSettings(filed) {\r\n    this.settings[filed] = !this.settings[filed];\r\n    switch (filed) {\r\n      case 'isOnInProgressCamara':\r\n        this.settings[filed] ? this.vdkOne2OneCallSVC.setCameraOn() : this.vdkOne2OneCallSVC.setCameraOff();\r\n        const displaystyle = this.settings[filed] ? 'block' : 'none';\r\n        if (document.getElementById('OutgoingVideo')) document.getElementById('OutgoingVideo').style.display = displaystyle;\r\n        break;\r\n      case 'isOnInProgressMicrophone':\r\n        this.settings[filed] ? this.vdkOne2OneCallSVC.setMicUnmute() : this.vdkOne2OneCallSVC.setMicMute();\r\n        const enabled = this.settings[filed];\r\n        const audiotrack: any = (<HTMLInputElement>document.getElementById(\"localAudio\"));\r\n        if (audiotrack && audiotrack.audioTracks) {\r\n          audiotrack.audioTracks[0].enabled = enabled;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  changeM2MSettings(filed) {\r\n    this.settings[filed] = !this.settings[filed];\r\n    switch (filed) {\r\n      case 'isOnInProgressCamara':\r\n        this.settings[filed] ? this.vdkOne2OneCallSVC.setCameraOn() : this.vdkOne2OneCallSVC.setCameraOff();\r\n        const displaystyle = this.settings[filed] ? 'block' : 'none';\r\n        const displayNamestyle = this.settings[filed] ? 'none' : 'block';\r\n        document.getElementById('localVideo').style.display = displaystyle;\r\n        document.getElementById('localNameHolder').style.display = displayNamestyle;\r\n        break;\r\n      case 'isOnInProgressMicrophone':\r\n        this.settings[filed] ? this.vdkOne2OneCallSVC.setMicUnmute() : this.vdkOne2OneCallSVC.setMicMute();\r\n        const enabled = this.settings[filed];\r\n        const audiotrack: any = (<HTMLInputElement>document.getElementById(\"localAudio\"));\r\n        if (audiotrack && audiotrack.audioTracks) {\r\n          audiotrack.audioTracks[0].enabled = enabled;\r\n        }\r\n        break;\r\n    }\r\n  }\r\n\r\n  isShowRemoteVideo(): boolean {\r\n    return this.calling.templateName != 'VideoCallInProgress' && this.calling.callType != 'video';\r\n  }\r\n\r\n  isHideLocalVideo(): boolean {\r\n    const ishide = !(this.calling.templateName == 'VideoCallInProgress' || this.calling.templateName == 'outgoingVideoCall');\r\n    return ishide;\r\n  }\r\n\r\n  isShowOne2oneCall() {\r\n    const one2onetemplateList = `noCall,incommingAudioCall,outgoingAudioCall,\r\n    AudioCallInProgress,incommingVideoCall,outgoingVideoCall,VideoCallInProgress`\r\n    return one2onetemplateList.includes(this.calling.templateName);\r\n  }\r\n\r\n  isShowM2MCall() {\r\n    const one2onetemplateList = `groupIncommingAudioCall,groupOutgoingAudioCall,groupOngoingAudioCall,\r\n    groupIncommingVideoCall,groupVideoCall`;\r\n    return one2onetemplateList.includes(this.calling.templateName);\r\n  }\r\n\r\n  isM2MProgressCall() {\r\n    return this.calling.templateName == 'groupVideoCall' || this.calling.templateName == 'groupOngoingAudioCall';\r\n  }\r\n\r\n  addParticipant(response) {\r\n    const user = this.AllUsers.find(user => user.ref_id == response.participant);\r\n    this.calling.participant.push(user);\r\n    this.changeDetector.detectChanges();\r\n    setTimeout(() => {\r\n      this.changeDetector.detectChanges();\r\n      this.vdkOne2OneCallSVC.setParticipantVideo(response.participant, document.getElementById(response.participant));\r\n      const user = this.findUserName(response.participant);\r\n      const textmsg = user + ' ' + 'has joined';\r\n      this.toastr.success(textmsg);\r\n    });\r\n    this.changeDetector.detectChanges();\r\n  }\r\n\r\n\r\n  removeParticipant(response) {\r\n    //this.ongoingCall = false;\r\n    const index = this.calling.participant.findIndex(user => user.ref_id == response.participant);\r\n    if (index >= 0) {\r\n      const user = this.findUserName(response.participant);\r\n      if (user) {\r\n        const textmsg = user + ' ' + 'has left';\r\n        this.toastr.success(textmsg);\r\n      }\r\n      this.calling.participant.splice(index, 1);\r\n      if (!this.calling.participant.length) {\r\n        this.resetCall();\r\n      }\r\n    }\r\n\r\n    this.changeDetector.detectChanges();\r\n  }\r\n  private getChatParticipants() {\r\n    let participants = [];\r\n    if (this.activeChat && this.activeChat['participants'] && this.activeChat['participants'].length) {\r\n      participants = this.activeChat['participants'].filter(g => g.ref_id != this.currentUserName).map(g => g.ref_id);\r\n    }\r\n    return participants;\r\n  }\r\n}\r\n","<div class=\"row dashboardContainer\">\r\n  <!-- popup end -->\r\n  <div class=\"col-sm-4 leftSide\" [hidden]=\"isHideThread()\">\r\n    <div class=\"leftSideHeader\">\r\n      <img src=\"./assets/images/logo2.png\" class=\"dashboardLogo\" />\r\n    </div>\r\n    <div class=\"leftSideListContainer\">\r\n\r\n      <ng-container *ngIf=\"threadType === 'THREAD'\">\r\n        <div style=\"align-items: center; margin:0px\" class=\"leftSectionHeader\">\r\n          <h4 class=\"leftHeading\">CHATROOMS</h4>\r\n          <h4 class=\"createText\" (click)=\"newChat()\">Create +</h4>\r\n        </div>\r\n        <!-- empty chats section start-->\r\n        <div class=\"leftSectionEmptyContainer\" *ngIf=\"!AllGroups.length && !loading\">\r\n          <p class=\"noAvailableText\">No Available ChatRoom</p>\r\n          <p class=\"tapText\">Tap and hold on any message to star it, so you can easily find it later.</p>\r\n        </div>\r\n        <!-- empty chats section end-->\r\n\r\n        <div class=\"listingContainer fullHeight\">\r\n          <div class=\"chatListContainer noHorizontalPadding\">\r\n            <ng-container *ngFor=\"let group of AllGroups\">\r\n              <div class=\"chatsCardContainer hand\" (click)=\"setActiveChat(group)\">\r\n                <div class=\"chatsCardLeft\">\r\n                  <div class=\"chatsNameWrap\">\r\n                    <p class=\"chatName text-capitalize\">{{group.chatTitle}}</p>\r\n                    <span class=\"unreadBadge\" *ngIf=\"group.unReadCount\"> {{group.unReadCount}}</span>\r\n                  </div>\r\n                  <p class=\"misreadMsg\" *ngIf=\"group.userTyping\">{{group?.userTypingContent}}</p>\r\n\r\n                  <p class=\"misreadMsg text-capitalize\" *ngIf=\"!group.userTyping\"\r\n                    [ngClass]=\"group.unReadCount ? 'misreadMsg':'readMsg'\">\r\n                    {{ getLastMessage(group) }}\r\n                  </p>\r\n\r\n                </div>\r\n                <div class=\"chatsCardRight mr-1\">\r\n                  <div class=\"dropdown mt-1\" style=\"align-self: flex-end\">\r\n                    <img src=\"./assets/images/more.png\" class=\"moreIcon\" />\r\n                    <div class=\"dropdown-content\">\r\n                      <a class=\"edit\" (click)=\"openModal(group)\">EDIT GROUP NAME</a>\r\n                      <a class=\"delete\" (click)=\"deleteGroup(group)\">DELETE</a>\r\n                    </div>\r\n                  </div>\r\n                  <p [ngClass]=\"group.Online ? 'cardOnlineStatus' :'cardOfflineStatus'\" *ngIf=\"group.auto_created\">\r\n                    {{ group.Online ? 'Online' :'Offline'}}\r\n                  </p>\r\n                  <p class=\"cardOnlineStatus\" *ngIf=\"!group.auto_created\">\r\n                    {{ group.onlineParticipants + '/' + group.TotalParticipants }} Online\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n\r\n      </ng-container>\r\n\r\n      <ng-container *ngIf=\"threadType === 'GROUP'\">\r\n        <add-group (setActiveChat)=\"setchat($event)\" (changeEvent)=\"changeSidebar($event)\"></add-group>\r\n      </ng-container>\r\n\r\n      <ng-container *ngIf=\"threadType === 'CHAT'\">\r\n        <new-chat (setActiveChat)=\"setchat($event)\" (changeEvent)=\"changeSidebar($event)\"></new-chat>\r\n      </ng-container>\r\n\r\n\r\n    </div>\r\n    <div class=\"leftSideFooter\">\r\n      <div class=\"logoutContainer\" (click)=\"logout()\">\r\n        <img src=\"./assets/images/log-out.png\" class=\"logoutLogo\" />\r\n        <span class=\"logoutText\">LOG OUT {{currentUserData.full_name}} </span>\r\n        <span class=\"ml-1\" [ngClass]=\"sdkconnected ? 'online' :'offline' \"></span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"col-sm-8 rightSide\" [hidden]=\"isHideChatScreen()\">\r\n    <div class=\"rightSideHeader alignBottom chatholder\">\r\n      <div class=\"d-flex\">\r\n        <div style=\"display: flex; flex-direction: row; align-items: center\">\r\n          <div style=\"display: flex; flex-direction: column; \">\r\n            <img\r\n              src=\"./assets/images/arrow-left.png\"\r\n              class=\"arrowLeft hand\"\r\n              (click)=\"backScreen()\"\r\n              *ngIf=\"isMobile()\"\r\n            />\r\n            <p\r\n              id=\"roomNameText\"\r\n              class=\"roomNameText text-capitalize\"\r\n              *ngIf=\"activeChat.chatTitle\"\r\n            >\r\n              {{ activeChat.chatTitle }}\r\n            </p>\r\n            <button style=\"display: none; align-items: center;height: 30px; margin: auto;\" class=\"btn btn-success\" id=\"returnedtocall\" (click)=\"returntoCall()\">\r\n              <p style=\"margin: 0px; padding: 0px; border: 0;\">return to Call</p>\r\n            </button>\r\n            <ng-container *ngFor=\"let group of AllGroups\">\r\n              <span class=\"misreadMsg\" *ngIf=\"group.userTyping && group.chatTitle == activeChat.chatTitle\">{{group?.userTypingContent}}</span>   <!--  typing... -->\r\n            </ng-container>\r\n          </div>\r\n        </div>\r\n        <div *ngIf=\"calling.templateName =='noCall'\">\r\n          <button type=\"submit\" class=\"btn callButton mr-1\" (click)=\"startAudioCall()\">\r\n            <img src=\"./assets/images/call.png\" class=\"callIcon\" />\r\n          </button>\r\n          <button type=\"submit\" class=\"btn broadcastButton\" (click)=\"startVideoCall()\">\r\n            <img src=\"./assets/images/video-call.png\" class=\"callIcon\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- right side starts -->\r\n    <div id=\"messagesBox\" class=\"messagesBox\" [ngClass]=\"calling.templateName == 'noCall' ? 'messagesBox' :''\"\r\n      *ngIf=\"isShowOne2oneCall()\">\r\n      <div  [ngClass]=\"calling.templateName == 'noCall' ? '' :'callContainer oncall' \">\r\n          <div style=\"pointer-events: none;\" class=\"IncommingVideo VideoCallBlock\"  [hidden]=\"isShowRemoteVideo()\"\r\n            [ngClass]=\"isShowRemoteVideo() ? 'IncommingVideo VideoCallBlock' : ''\">\r\n            <video class=\"IncommingVideo\" id=\"remoteVideo\" muted style=\"object-fit: fill;position:absolute;left:0;\" autoplay poster=\"./assets/images/vidd.mp4\">\r\n              <source src=\"\" type=\"video/mp4\" />\r\n            </video>\r\n          </div>\r\n          <div id=\"OutgoingVideo\" class=\"OutgoingVideo VideoCallBlock\" [hidden]=\"isHideLocalVideo()\">\r\n            <video class=\"w-100\" draggable=\"true\" id=\"localVideo\" muted style=\"object-fit: fill\" autoplay>\r\n              <source src=\"\" type=\"video/mp4\" />\r\n            </video>\r\n          </div>\r\n        <ng-container [ngTemplateOutlet]=\"selectedTemplate\" *ngIf=\"isShowOne2oneCall()\"></ng-container>\r\n      </div>\r\n    </div>\r\n\r\n    <ng-container [ngTemplateOutlet]=\"selectedTemplate\" *ngIf=\"isShowM2MCall()\"></ng-container>\r\n    <ng-container [ngTemplateOutlet]=\"chatDuringCall\" *ngIf=\"chatDCall()\"></ng-container>\r\n    \r\n\r\n    <div id=\"sendInputContainer\" class=\"sendInputContainer\" [hidden]=\"!activeChat.chatTitle || calling.templateName != 'noCall'\">\r\n      <div class=\"sendInputWrapper\">\r\n        <ng-container *ngIf=\"fileToSend\">\r\n          <div class=\"w-100\">\r\n            <img src=\"./assets/images/Document.png\" class=\"attachmentItemIcon ml-4\" />\r\n            <span class=\"ml-2\">{{fileToSend.name}}</span>\r\n            <span class=\"font-weight-bolder hand ml-2 text-danger\" (click)=\"removeAttachment()\">X</span>\r\n          </div>\r\n        </ng-container>\r\n\r\n        <input #messageInputElement type=\"text\" class=\"form-control\" placeholder=\"Type to reply..\"\r\n          (keyup)=\"typingmessage($event)\" [(ngModel)]=\"message\" *ngIf=\"!fileToSend\" />\r\n\r\n        <div class=\"sendInputButtonContainer dropup \" style=\"border-right: 1px solid #ebedf4\">\r\n          <img src=\"./assets/images/attachment.png\" data-toggle=\"dropdown\" class=\"sendIcon dropdown-toggle\" />\r\n          <div class=\"attachmentpopup dropdown-menu dropdown-menu-right selectOptionContainer\">\r\n            <div class=\"attachmentPopHeader mx-3\">\r\n              <p class=\"attachmentHeading\">ADD ATTACHMENT</p>\r\n              <p class=\"attachmentHeading\">X</p>\r\n            </div>\r\n            <div class=\"attachmentPopContent\" (click)=\"fileuploader.click()\">\r\n              <div class=\"attachmentTool\">\r\n                <div class=\"attachmentToolIcon\">\r\n                  <img src=\"./assets/images/Document.png\" class=\"attachmentItemIcon\" />\r\n                </div>\r\n                <input #fileuploader class=\"d-none\" type=\"file\" id=\"fileinput\"\r\n                  (change)=\"handleFileInput($event.target.files)\" />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"sendInputButtonContainer\" (click)=\"sendTextMessage()\">\r\n          <img src=\"./assets/images/send.png\" class=\"sendIcon\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- The Modal -->\r\n<div id=\"myModal\" class=\"modal\" *ngIf=\"popupimagesrc\">\r\n  <span class=\"close\" (click)=\"closeImage()\">&times;</span>\r\n  <img class=\"modal-content\" id=\"img01\" [src]=\"popupimagesrc | safeUrl\">\r\n</div>\r\n\r\n<div id=\"myModal\" class=\"modal\" *ngIf=\"editGroupModel\">\r\n  <div class=\"createChatPopup \">\r\n    <div class=\"chatPopupContent groupPopup\">\r\n      <div class=\"modalHeader\">\r\n        <p class=\"modalHeading\">Edit group </p>\r\n        <img src=\"./assets/images/cross.png\" class=\"modalCross hand\" (click)=\"closeModal()\" />\r\n      </div>\r\n      <div class=\" modalContent\">\r\n        <form [formGroup]=\"groupForm\" class=\"w-100\" (submit)=\"editGroup()\">\r\n          <p class=\"modalContentHeading\">Name your group </p>\r\n          <input type=\"text\" class=\"form-control\" placeholder=\"ex: Deeper team\" formControlName=\"group_title\" />\r\n          <form-errors [control]=\"groupForm.get('group_title')\"></form-errors>\r\n        </form>\r\n      </div>\r\n      <button type=\"submit\" class=\"btn doneButton mt-3\" (click)=\"editGroup()\" [disabled]=\"loading\">\r\n        DONE\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<ng-template #noCall>\r\n  <ng-container *ngIf=\"activeChat.chatTitle\">\r\n    <ng-container *ngFor=\"let chat of activeChat['chatHistory']\">\r\n      <div [ngClass]=\"chat.from == currentUserName ? 'senderChatContainer' :'receiverChatContainer'\">\r\n\r\n        <h4 class=\"msgBy text-capitalize\" *ngIf=\"chat.from != currentUserName\">{{chat.messageBy}}</h4>\r\n        <!-- first messgae from same person -->\r\n        <div class=\"bubbleContainer\">\r\n\r\n          <div class=\"bubble\" *ngIf=\"chat.type =='text'\">\r\n            <p class=\"msgText\">{{chat.content}}</p>\r\n          </div>\r\n\r\n          <div class=\"imgbubble\" *ngIf=\"chat.type =='image'\">\r\n            <mat-spinner [diameter]=\"30\" *ngIf=\"!chat.content\"></mat-spinner>\r\n            <img [src]=\"chat.content | safeUrl\" class=\"w-100 msgImage img-thumbnail img-fluid\"\r\n              (click)=\"openImage(chat.content)\" />\r\n          </div>\r\n\r\n          <div class=\"imgbubble file-attachment\" *ngIf=\"chat.type !='text' && chat.type !='image'\">\r\n            <mat-spinner [diameter]=\"30\" *ngIf=\"!chat.content\"></mat-spinner>\r\n            <ng-container *ngIf=\"chat.content\">\r\n              <img [src]=\"checkFileType(chat.content)\" class=\"w-100 msgImage thumbnail img-fluid\" />\r\n              <a [href]=\"chat.content | safeUrl\" download>Download</a>\r\n            </ng-container>\r\n          </div>\r\n\r\n          <span class=\"time\">\r\n            <ng-container *ngIf=\"chat.readCount && chat.from == currentUserName\">\r\n              Read\r\n              <br />\r\n            </ng-container>\r\n            <span> {{chat.date | date:\"shortTime\"}}</span>\r\n          </span>\r\n        </div>\r\n\r\n      </div>\r\n    </ng-container>\r\n  </ng-container>\r\n\r\n  <div class=\"chatRoomContainer\" *ngIf=\"!activeChat.chatTitle && !loading\">\r\n    <div style=\"height: 100%;\" class=\"listingContainer\">\r\n      <!-- empty list container start -->\r\n      <div class=\"emptyListContainer\">\r\n        <div class=\"emptyListTop\">\r\n          <div></div>\r\n          <img src=\"./assets/images/shipping.png\" class=\"shippingIcon\" />\r\n          <div class=\"noConvoTextWrapper\">\r\n            <p class=\"noConvoText\">No Conversation Yet</p>\r\n            <p style=\"max-width: 200px;\" class=\"noConvoSub\">\r\n              Tap and hold on any message to star it, so you can easily find\r\n              it later.\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div class=\"emptyListBottom\">\r\n          <button type=\"submit\" class=\"btn newChatButton\" (click)=\"newChat()\">\r\n            NEW CHAT\r\n          </button>\r\n          <button type=\"submit\" class=\"btn refreshButton\" (click)=\"getAllGroups()\">\r\n            REFRESH\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <!-- empty list container end -->\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #incommingAudioCall>\r\n  <p class=\"callContainerStatus\">Incoming Call</p>\r\n  <p class=\"callerName text-capitalize\">{{ calling['callerName'] }}</p>\r\n  <audio id=\"Incomingaudio\" autoplay src=\"./assets/images/calling_you.mp3\" preload=\"auto\"></audio>\r\n  <img src=\"./assets/images/audio.png\" class=\"audioIcon\" />\r\n  <div style=\"width: 150px\" class=\"callButtonsContainer\">\r\n    <img src=\"./assets/images/decline-button.png\" class=\"responseButtonImg\" (click)=\"stopCall()\" />\r\n    <img src=\"./assets/images/Accept-button.png\" class=\"responseButtonImg\" (click)=\"acceptcall()\" />\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #outgoingAudioCall>\r\n  <p class=\"callContainerStatus\">Calling</p>\r\n  <p class=\"callerName text-capitalize\">{{ calling['callerName'] }}</p>\r\n  <img src=\"./assets/images/blue-avatar.png\" class=\"avatarIcon\" />\r\n  <div style=\"width: 150px\" class=\"callButtonsContainer\">\r\n    <!-- <img src=\"./assets/images/video-call-off.png\" class=\"responseButtonImg\" /> -->\r\n    <img src=\"./assets/images/decline-button.png\" class=\"responseButtonImg\" (click)=\"stopCall()\" />\r\n    <img src=\"./assets/images/microphone-{{ settings.isOnInProgressMicrophone ? 'on.png' :'off.png'}}\"\r\n      class=\"responseButtonImg\" (click)=\"changeSettings('isOnInProgressMicrophone')\" />\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #AudioCallInProgress>\r\n  <p class=\"settingsIcon callContainerStatus white m-3\">{{ callTime | formatTime }}</p>\r\n  <p class=\"callerName text-capitalize\">{{ calling['callerName'] }}</p>\r\n  <img src=\"./assets/images/blue-avatar.png\" class=\"avatarIcon\" />\r\n  <div style=\"width: 150px\" class=\"callButtonsContainer\">\r\n    <!-- <img src=\"./assets/images/video-call-off.png\" class=\"responseButtonImg\" /> -->\r\n    <img src=\"./assets/images/decline-button.png\" class=\"responseButtonImg\" (click)=\"stopCall()\" />\r\n    <img src=\"./assets/images/microphone-{{ settings.isOnInProgressMicrophone ? 'on.png' :'off.png'}}\"\r\n      class=\"responseButtonImg\" (click)=\"changeSettings('isOnInProgressMicrophone')\" />\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #incommingVideoCall>\r\n  <audio id=\"audiotag1\" autoplay src=\"./assets/images/calling_you.mp3\" preload=\"auto\"></audio>\r\n  <p class=\"callContainerStatus\">Incoming Call</p>\r\n  <p class=\"callerName text-capitalize\">{{ calling['callerName'] }}</p>\r\n  <img src=\"./assets/images/blue-avatar.png\" class=\"avatarIcon\" />\r\n  <div style=\"width:140px\" class=\"callButtonsContainer\">\r\n    <img src=\"./assets/images/decline-button.png\" class=\"responseButtonImg\" (click)=\"stopCall()\" />\r\n    <img src=\"./assets/images/Accept-button.png\" class=\"responseButtonImg\" (click)=\"acceptcall()\" />\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #outgoingVideoCall>\r\n  <p class=\"callContainerStatus\">Calling </p>\r\n  <p class=\"callerName text-capitalize\">{{ calling['callerName'] }}</p>\r\n  <img src=\"./assets/images/blue-avatar.png\" class=\"avatarIcon\" />\r\n  <div style=\"width: 200px\" class=\"callButtonsContainer\">\r\n    <img src=\"./assets/images/video-call-{{settings.isOnInProgressCamara ? 'on.png' :'off.png'}}\"\r\n      class=\"responseButtonImg\" (click)=\"changeSettings('isOnInProgressCamara')\" />\r\n    <img src=\"./assets/images/decline-button.png\" class=\"responseButtonImg\" (click)=\"stopCall()\" />\r\n    <img src=\"./assets/images/microphone-{{settings.isOnInProgressMicrophone ? 'on.png' :'off.png'}}\"\r\n      class=\"responseButtonImg\" (click)=\"changeSettings('isOnInProgressMicrophone')\" />\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #VideoCallInProgress>\r\n  <p class=\"settingsIcon callContainerStatus white m-3\">{{ callTime | formatTime }}</p>\r\n  <p class=\"callerName text-capitalize\" id=\"callerHolder\">{{ calling['callerName'] }}</p>\r\n  <img src=\"./assets/images/blue-avatar.png\" class=\"avatarIcon\" />\r\n  <div style=\"width: 200px\" class=\"callButtonsContainer\">\r\n    <img src=\"./assets/images/video-call-{{ settings.isOnInProgressCamara ? 'on.png' :'off.png'}}\"\r\n      class=\"responseButtonImg\" (click)=\"changeSettings('isOnInProgressCamara')\" />\r\n    <img src=\"./assets/images/decline-button.png\" class=\"responseButtonImg\" (click)=\"stopCall()\" />\r\n    <img src=\"./assets/images/microphone-{{ settings.isOnInProgressMicrophone ? 'on.png' :'off.png'}}\"\r\n      class=\"responseButtonImg\" (click)=\"changeSettings('isOnInProgressMicrophone')\" />\r\n      <img (click)=\"setChatDuringCall()\" style=\"z-index: 10000;cursor:pointer\" src=\"./assets/images/chat1.png\" class=\"callicon\" />\r\n\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #groupIncommingAudioCall>\r\n  <div class=\"messagesBox\" id=\"messagesBox\">\r\n    <div class=\"callContainer\">\r\n      <audio id=\"audiotag1\" autoplay src=\"./assets/images/calling_you.mp3\" preload=\"auto\"></audio>\r\n      <p class=\"callContainerStatus\">Incomming Call From</p>\r\n      <p class=\"callerName text-capitalize\">{{ calling.callerName }} </p>\r\n      <img src=\"./assets/images/blue-avatar.png\" class=\"avatarIcon\" />\r\n      <div style=\"width: 200px;\" class=\"callButtonsContainer\">\r\n        <img src=\"./assets/images/Accept-button.png\" class=\"responseButtonImg\" (click)=\"acceptcall()\" />\r\n        <img src=\"./assets/images/decline-button.png\" class=\"responseButtonImg\" (click)=\"stopCall()\" />\r\n        <img src=\"./assets/images/microphone-{{ settings.isOnInProgressMicrophone ? 'on.png' :'off.png'}}\"\r\n          class=\"responseButtonImg\" (click)=\"changeSettings('isOnInProgressMicrophone')\" />\r\n        <!-- <img src=\"./assets/images/speaker-on.png\" class=\"responseButtonImg\" /> -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #groupOutgoingAudioCall>\r\n  <div class=\"messagesBox\" id=\"messagesBox\">\r\n    <div class=\"callContainer\">\r\n      <p class=\"callContainerStatus\">Calling</p>\r\n      <p class=\"callerName text-capitalize\">{{ calling.callerName }} </p>\r\n      <img src=\"./assets/images/blue-avatar.png\" class=\"avatarIcon\" />\r\n      <div style=\"width: 150px;\" class=\"callButtonsContainer\">\r\n        <img src=\"./assets/images/decline-button.png\" class=\"responseButtonImg\" (click)=\"stopCall()\" />\r\n        <img src=\"./assets/images/microphone-{{ settings.isOnInProgressMicrophone ? 'on.png' :'off.png'}}\"\r\n          class=\"responseButtonImg\" (click)=\"changeSettings('isOnInProgressMicrophone')\" />\r\n        <!-- <img src=\"./assets/images/speaker-on.png\" class=\"responseButtonImg\" /> -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #groupOngoingAudioCall>\r\n  <div style=\"border-radius: 0px\" class=\"messagesBox noPadding\" >\r\n    <p class=\"settingsIcon callContainerStatus white m-3\">{{ callTime | formatTime }}</p>\r\n    <div class=\"groupCallContainer\">\r\n      <div class=\"upperVideoContainer\">\r\n        <div class=\"singleParticipantContainer\" *ngFor=\"let user of calling.participant\">\r\n          <div class=\"singleInner\">\r\n            <img src=\"./assets/images/blue-avatar.png\" class=\"singleInnAvatar\" />\r\n            <p class=\"innerCallerName text-capitalize\">{{ user.full_name }}</p>\r\n            <audio [id]=\"user.ref_id\" autoplay style=\"object-fit: cover\" autoplay>\r\n              />\r\n            </audio>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <div class=\"bottomVideoContainer\">\r\n        <div class=\"localVideoContainer\">\r\n          <div class=\"singleInner\">\r\n            <img src=\"./assets/images/blue-avatar.png\" class=\"singleInnAvatar\" />\r\n            <p class=\"innerCallerName text-capitalize\">{{ currentUserData.full_name }}</p>\r\n            <audio id=\"localAudio\" autoplay style=\"object-fit: cover\" autoplay>\r\n              />\r\n            </audio>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"groupCallControllContainer\">\r\n          <div style=\"width: 150px;\" class=\"callButtonsContainer\">\r\n            <img src=\"./assets/images/decline-button.png\" class=\"responseButtonImg\" (click)=\"stopCall()\" />\r\n            <img src=\"./assets/images/microphone-{{ settings.isOnInProgressMicrophone ? 'on.png' :'off.png'}}\"\r\n              class=\"responseButtonImg\" (click)=\"changeSettings('isOnInProgressMicrophone')\" />\r\n            <!-- <img src=\"./assets/images/speaker-on.png\" class=\"responseButtonImg\" /> -->\r\n            <img (click)=\"setChatDuringCall()\" style=\"z-index: 10000;cursor: pointer;\" src=\"./assets/images/chat1.png\" class=\"callicon\" />\r\n\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<!-- video call -->\r\n\r\n<ng-template #groupIncommingVideoCall>\r\n  <div class=\"messagesBox\" id=\"messagesBox\">\r\n    <div class=\"callContainer\">\r\n      <audio id=\"audiotag1\" autoplay src=\"./assets/images/calling_you.mp3\" preload=\"auto\"></audio>\r\n      <p class=\"callContainerStatus\">Incomming Call From</p>\r\n      <p class=\"callerName text-capitalize\">{{ calling.callerName }}</p>\r\n      <img src=\"./assets/images/blue-avatar.png\" class=\"avatarIcon\" />\r\n      <div style=\"width: 200px;\" class=\"callButtonsContainer\">\r\n        <img src=\"./assets/images/Accept-button.png\" class=\"responseButtonImg\" (click)=\"acceptcall()\" />\r\n        <img src=\"./assets/images/decline-button.png\" class=\"responseButtonImg\" (click)=\"stopCall()\" />\r\n        <img src=\"./assets/images/microphone-{{ settings.isOnInProgressMicrophone ? 'on.png' :'off.png'}}\"\r\n          class=\"responseButtonImg\" (click)=\"changeSettings('isOnInProgressMicrophone')\" />\r\n        <!-- <img src=\"./assets/images/speaker-on.png\" class=\"responseButtonImg\" /> -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n<ng-template #chatDuringCall >\r\n  <div id=\"appendChatDuringCall\">\r\n    <ng-container *ngIf=\"activeChat.chatTitle\">\r\n      <ng-container *ngFor=\"let chat of activeChat['chatHistory']\">\r\n        <div [ngClass]=\"chat.from == currentUserName ? 'senderChatContainer' :'receiverChatContainer'\">\r\n  \r\n          <h4 class=\"msgBy text-capitalize\" *ngIf=\"chat.from != currentUserName\">{{chat.messageBy}}</h4>\r\n          <!-- first messgae from same person -->\r\n          <div class=\"bubbleContainer\">\r\n  \r\n            <div class=\"bubble\" *ngIf=\"chat.type =='text'\">\r\n              <p class=\"msgText\">{{chat.content}}</p>\r\n            </div>\r\n  \r\n            <div class=\"imgbubble\" *ngIf=\"chat.type =='image'\">\r\n              <mat-spinner [diameter]=\"30\" *ngIf=\"!chat.content\"></mat-spinner>\r\n              <img [src]=\"chat.content | safeUrl\" class=\"w-100 msgImage img-thumbnail img-fluid\"\r\n                (click)=\"openImage(chat.content)\" />\r\n            </div>\r\n  \r\n            <div class=\"imgbubble file-attachment\" *ngIf=\"chat.type !='text' && chat.type !='image'\">\r\n              <mat-spinner [diameter]=\"30\" *ngIf=\"!chat.content\"></mat-spinner>\r\n              <ng-container *ngIf=\"chat.content\">\r\n                <img [src]=\"checkFileType(chat.content)\" class=\"w-100 msgImage thumbnail img-fluid\" />\r\n                <a [href]=\"chat.content | safeUrl\" download>Download</a>\r\n              </ng-container>\r\n            </div>\r\n  \r\n            <span class=\"time\">\r\n              <ng-container *ngIf=\"chat.readCount && chat.from == currentUserName\">\r\n                Read\r\n                <br />\r\n              </ng-container>\r\n              <span> {{chat.date | date:\"shortTime\"}}</span>\r\n            </span>\r\n          </div>\r\n  \r\n        </div>\r\n      </ng-container>\r\n    </ng-container>\r\n  \r\n    <div class=\"chatRoomContainer\" *ngIf=\"!activeChat.chatTitle && !loading\">\r\n      <div style=\"height: 100%;\" class=\"listingContainer\">\r\n        <!-- empty list container start -->\r\n        <div class=\"emptyListContainer\">\r\n          <div class=\"emptyListTop\">\r\n            <div></div>\r\n            <img src=\"./assets/images/shipping.png\" class=\"shippingIcon\" />\r\n            <div class=\"noConvoTextWrapper\">\r\n              <p class=\"noConvoText\">No Conversation Yet</p>\r\n              <p style=\"max-width: 200px;\" class=\"noConvoSub\">\r\n                Tap and hold on any message to star it, so you can easily find\r\n                it later.\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <div class=\"emptyListBottom\">\r\n            <button type=\"submit\" class=\"btn newChatButton\" (click)=\"newChat()\">\r\n              NEW CHAT\r\n            </button>\r\n            <button type=\"submit\" class=\"btn refreshButton\" (click)=\"getAllGroups()\">\r\n              REFRESH\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <!-- empty list container end -->\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n\r\n\r\n<ng-template #groupVideoCall>\r\n  <div id=\"messagesBox\" style=\"border-radius: 0px;\" class=\"messagesBox noPadding\">\r\n    <p class=\"settingsIcon callContainerStatus white m-3\">{{ callTime | formatTime }}</p>\r\n    <div id=\"groupCallContainer\" class=\"groupCallContainer\" [ngClass]=\"groupOutgoingVideoCall ? 'noCallBackground' : ''\">\r\n\r\n      \r\n\r\n      <div class=\"upperVideoContainer\">\r\n\r\n        <div class=\"conditionalName\" *ngIf=\"groupOutgoingVideoCall\">\r\n          <p class=\"callContainerStatus\">Calling</p>\r\n          <p class=\"callerName text-capitalize\">{{ calling.callerName }}</p>\r\n        </div>\r\n\r\n        <!-- during call top view start-->\r\n        <div class=\"singleParticipantContainer\" *ngFor=\"let user of calling.participant\">\r\n          <div class=\"singleInner\">\r\n            <div class=\"groupVideoCallWrapper groupVideoCallWrapperBlock\">\r\n              <video [id]=\"user.ref_id\" autoplay muted style=\"object-fit: contain; height: 100%;\r\n              width: 100%;\" autoplay>\r\n                <source src=\"\" type=\"video/mp4\" />\r\n              </video>\r\n            </div>\r\n            <img src=\"./assets/images/blue-avatar.png\" class=\"singleInnAvatar\" />\r\n            <p class=\"innerCallerName\">{{ user.full_name }}</p>\r\n          </div>\r\n        </div>\r\n        <!-- during call top view end-->\r\n      </div>\r\n      <div class=\"bottomVideoContainer \" [ngClass]=\"groupOutgoingVideoCall ? 'noCallBackground' : ''\">\r\n        <div class=\"localVideoContainer\">\r\n          <div style=\"margin-bottom: 50px\" class=\"singleInner\">\r\n            <!-- if video got sorce it will automatically view on top of name and avatar -->\r\n            <div class=\"groupVideoCallWrapperBlock\"\r\n              [ngClass]=\"groupOutgoingVideoCall ? 'groupVideoCallWrapper_noCall ' : 'groupVideoCallWrapper_Call'\">\r\n              <video id=\"localVideo\" style=\"object-fit: cover; width: 100%;\" autoplay muted autoplay>\r\n                <source src=\"\" type=\"video/mp4\" />\r\n              </video>\r\n            </div>\r\n\r\n            <div class=\"singleInner\" id=\"localNameHolder\">\r\n              <img src=\"./assets/images/blue-avatar.png\" class=\"singleInnAvatar\" />\r\n              <p class=\"innerCallerName text-capitalize\">{{ currentUserData.full_name }}</p>\r\n            </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"groupCallControllContainer\">\r\n          <div style=\"width: 200px;\" class=\"callButtonsContainer\">\r\n            <img src=\"./assets/images/video-call-{{ settings.isOnInProgressCamara ? 'on.png' :'off.png'}}\"\r\n              class=\"responseButtonImg\" (click)=\"changeSettings('isOnInProgressCamara')\" />\r\n            <img src=\"./assets/images/decline-button.png\" class=\"responseButtonImg\" (click)=\"stopCall()\" />\r\n            <img src=\"./assets/images/microphone-{{ settings.isOnInProgressMicrophone ? 'on.png' :'off.png'}}\"\r\n              class=\"responseButtonImg\" (click)=\"changeSettings('isOnInProgressMicrophone')\" />\r\n            <!-- <img src=\"./assets/images/speaker-on.png\" class=\"responseButtonImg\" /> -->\r\n            <img (click)=\"setChatDuringCall()\" style=\"z-index: 10000; cursor: pointer;\" src=\"./assets/images/chat1.png\" class=\"callicon\" />\r\n\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</ng-template>","import {\r\n  Component,\r\n  ElementRef,\r\n  EventEmitter,\r\n  OnInit,\r\n  Output,\r\n  ViewChild,\r\n} from \"@angular/core\";\r\nimport { MatLegacyDialog as MatDialog } from \"@angular/material/legacy-dialog\";\r\nimport { fromEvent } from \"rxjs/internal/observable/fromEvent\";\r\nimport { debounceTime } from \"rxjs/internal/operators/debounceTime\";\r\nimport { distinctUntilChanged } from \"rxjs/internal/operators/distinctUntilChanged\";\r\nimport { map } from \"rxjs/internal/operators/map\";\r\nimport { mergeMap } from \"rxjs/internal/operators/mergeMap\";\r\nimport { BaseService } from \"src/app/shared/services/base.service\";\r\nimport { PubsubService } from \"src/app/shared/services/pubsub.service\";\r\nimport { ToastrService } from \"ngx-toastr\";\r\nimport { startWith } from \"rxjs/operators\";\r\nimport { of } from \"rxjs\";\r\nimport { ChatComponent } from \"../chat.component\";\r\nimport { StorageService } from \"../../../shared/services/storage.service\";\r\n\r\n@Component({\r\n  selector: \"new-chat\",\r\n  templateUrl: \"./new-chat.component.html\",\r\n  styleUrls: [\"./new-chat.component.scss\"],\r\n})\r\nexport class NewChatComponent implements OnInit {\r\n  loading = true;\r\n  AllUsers = [];\r\n  CopyAllUsers = [];\r\n  @Output() changeEvent = new EventEmitter<string>();\r\n  @ViewChild(\"searchInput\") searchInput: ElementRef;\r\n  @Output() setActiveChat = new EventEmitter<string>();\r\n\r\n  constructor(\r\n    public pubsubService: PubsubService,\r\n    private svc: BaseService,\r\n    public dialog: MatDialog,\r\n    private toastr: ToastrService\r\n  ) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.searchInput) {\r\n      fromEvent(this.searchInput.nativeElement, \"input\")\r\n        .pipe(\r\n          map((event: Event) => (event.target as HTMLInputElement).value),\r\n          debounceTime(1000),\r\n          distinctUntilChanged(),\r\n          startWith(\"\"),\r\n          mergeMap((value) => {\r\n            this.loading = true;\r\n            if (!value) {\r\n              const data = {\r\n                sorting: \"ORDER BY full_name ASC\",\r\n                search_field: \"full_name\",\r\n                search_value: \"\",\r\n                condition: \"contains\",\r\n              };\r\n              return this.svc.post(\"AllUsers\", data).pipe(\r\n                map((res) => {\r\n                  if (!(res.users && res.users.length)) {\r\n                    res.users = [];\r\n                  }\r\n                  this.CopyAllUsers = [...res.users];\r\n                  return res;\r\n                })\r\n              );\r\n            }\r\n            const temparaay = [...this.CopyAllUsers];\r\n            const filteruser = temparaay.filter((user) => {\r\n              let searchValue = value.toLowerCase();\r\n              if (user.full_name.toLowerCase().startsWith(searchValue)) {\r\n                return -1;\r\n              }\r\n            });\r\n            const returnData = {\r\n              users: filteruser,\r\n            };\r\n            return of(returnData);\r\n          })\r\n        )\r\n        .subscribe((res) => {\r\n          this.loading = false;\r\n          if (!res.users || !res.users.length) {\r\n            this.toastr.error(\"No contacts found\", \"Opps!\");\r\n            this.AllUsers = [];\r\n          } else {\r\n            this.AllUsers = res.users;\r\n          }\r\n        });\r\n    }\r\n  }\r\n\r\n  backScreen() {\r\n    this.changeEvent.emit(\"THREAD\");\r\n  }\r\n\r\n  addGroupEvent() {\r\n    this.changeEvent.emit(\"GROUP\");\r\n  }\r\n\r\n  startChat(user, val) {\r\n    if (this.loading) return;\r\n    this.loading = true;\r\n    let data = {\r\n      group_title: StorageService.getUserData().username + \"-\" + user.full_name,\r\n      participants: [user.user_id],\r\n      auto_created: 1,\r\n    };\r\n    console.log(\"** new group creation: \", StorageService.getUserData());\r\n    \r\n    this.svc.post(\"CreateGroup\", data).subscribe((v) => {\r\n      if (v && v.status == 200) {\r\n        let subscribedata = {\r\n          ...v.group,\r\n          key: v.group[\"channel_key\"],\r\n          channel: v.group[\"channel_name\"],\r\n        };\r\n        let data = [];\r\n        data.push(subscribedata);\r\n        this.pubsubService.subscribeToChat(data);\r\n\r\n\r\n        //ABM\r\n        const groupInfo = {\r\n          from: StorageService.getUserData().ref_id,\r\n          to: [user.ref_id],\r\n          action: \"new\",\r\n          groupModel: v\r\n          \r\n        };\r\n        console.log(\"** notification send on group creation :\\n\\n\", groupInfo, \"\\n\\n\\n\\n\", v, \"\\n\",val);\r\n        this.pubsubService.sendNotificationOnGroupUpdation(groupInfo);\r\n        //\r\n\r\n\r\n\r\n        this.changeEvent.emit(\"THREAD\");\r\n        v.group.clicked_item = val;\r\n        this.setActiveChat.emit(v.group);\r\n        this.loading = false;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"newChatHeader\">\r\n  <div class=\"newChatLeft hand\">\r\n    <img src=\"./assets/images/arrow-left.png\" class=\"arrowLeft\" (click)=\"backScreen()\" />\r\n    <p class=\"newChatHeading\">New Chat</p>\r\n  </div>\r\n  <div class=\"newChatRight hand\">\r\n    <img class=\"goodMark\" src=\"./assets/images/checkmark.png\" />\r\n  </div>\r\n</div>\r\n<div class=\"newChatSearchBox\">\r\n  <div class=\"input-group\">\r\n    <div class=\"input-group-prepend\">\r\n      <img src=\"./assets/images/search.png\" class=\"seacrchIcon\" />\r\n    </div>\r\n    <input type=\"text\" class=\"form-control\" placeholder=\"Search\" #searchInput />\r\n  </div>\r\n</div>\r\n<div class=\"addGrpChat\">\r\n  <div class=\"addGrpChatTop hand\" (click)=\"addGroupEvent()\">\r\n    <img src=\"./assets/images/Group Chat.png\" class=\"addgrpIcon\" />\r\n    <p class=\"addGrpTitle\">Add Group Chat</p>\r\n  </div>\r\n  <div class=\"addGrpSep\"></div>\r\n  <!-- <div class=\"addGrpSub\"> -->\r\n  <p class=\"cntct\">Contacts</p>\r\n  <!-- </div> -->\r\n</div>\r\n<div class=\"contactListContainer max-height\">\r\n\r\n  <ng-container *ngFor=\"let user of AllUsers\">\r\n    <div class=\"contactListCard hand\">\r\n      <div class=\"contactListCardLeft\">\r\n        <img src=\"./assets/images/user.png\" class=\"ListCardIcon\" />\r\n        <p class=\"ListCardName text-capitalize pb-1\">{{user.full_name}}</p>\r\n      </div>\r\n      <div class=\"iconsdiv contactListCardRight justify-content-end pl-1\">\r\n        <div class=\"videoicon\">\r\n          <img (click)=\"startChat(user , 'video')\" src=\"./assets/images/video-call.png\" class=\" pl-1 ListCardButton hand\" />\r\n        </div>\r\n        <div class=\"audioicon contactListCardRight justify-content-end pl-1\">\r\n          <img (click)=\"startChat(user , 'audio')\" src=\"./assets/images/call.png\" class=\" pl-1 ListCardButton hand\" />\r\n        </div>\r\n        <div class=\"contactListCardRight justify-content-end pl-1\">\r\n          <img (click)=\"startChat(user , 'chat')\" src=\"./assets/images/chat.png\" class=\" pl-1 ListCardButton hand\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n\r\n</div>","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { UntypedFormGroup, UntypedFormControl, UntypedFormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from \"@angular/router\";\r\nimport { StorageService } from 'src/app/shared/services/storage.service';\r\nimport FormsHandler from '../../shared/FormsHandler/FormsHandler';\r\nimport { AuthService } from '../../shared/auth/auth.service';\r\nimport { PROJECT_ID } from 'src/constants/const';\r\n\r\n@Component({\r\n  selector: 'ngx-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n\r\n  loginForm: UntypedFormGroup;\r\n  loading: boolean = false;\r\n  formError: string = '';\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private _fb: UntypedFormBuilder,\r\n    public auth: AuthService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    if (this.auth.islogin()) {\r\n      this.router.navigate(['chat']);\r\n    }\r\n    this.buildForm();\r\n    document.addEventListener(\"keyup\", event => {\r\n      if (event.code === 'Enter') {\r\n        this.onLogin();\r\n      }\r\n    });\r\n  }\r\n\r\n  buildForm() {\r\n    this.loginForm = this._fb.group({\r\n      'email': new UntypedFormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(50)]),\r\n      'password': new UntypedFormControl(null, [Validators.required, Validators.minLength(8), Validators.maxLength(14)])\r\n    }, { updateOn: 'change' });\r\n  }\r\n\r\n  onLogin() {\r\n    FormsHandler.validateForm(this.loginForm);\r\n    if (this.loginForm.invalid) return;\r\n    const saveData = this.loginForm.value;\r\n    saveData.project_id = PROJECT_ID;\r\n    this.loading = true;\r\n    this.formError = null;\r\n    this.auth.login(saveData).subscribe(v => {\r\n      this.loading = false;\r\n      if (v && v.status == 200) {\r\n        StorageService.setUserData(v);\r\n        StorageService.setAuthToken(v.auth_token);\r\n        StorageService.setAuthUsername(v.ref_id);\r\n        this.router.navigate(['chat']);\r\n        this.loginForm.reset();\r\n      } else {\r\n        this.formError = v.message;\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.loginForm.reset();\r\n  }\r\n\r\n}\r\n","<div class=\"containerWrapper\">\r\n  <img src=\"./assets/images/logo2.png\" class=\"logo\" />\r\n  <div class=\"innerWrapper\">\r\n    <h6 class=\"wrapperHeading\">Sign In</h6>\r\n    <p class=\"text-danger text-capitalize\">{{formError}}</p>\r\n    <div class=\"inputsContainer form-group\">\r\n      <form [formGroup]=\"loginForm\" class=\"w-100\" (submit)=\"onLogin()\">\r\n        <input type=\"email\" class=\"form-control\" placeholder=\"Email/Username\" formControlName=\"email\" />\r\n        <form-errors [control]=\"loginForm.get('username')\"></form-errors>\r\n        <input type=\"password\" class=\"form-control\" placeholder=\"Password\" formControlName=\"password\" />\r\n        <form-errors [control]=\"loginForm.get('password')\"></form-errors>\r\n      </form>\r\n    </div>\r\n    <div class=\"buttonsContainer\">\r\n      <button type=\"submit\" class=\"signButton\" (click)=\"onLogin()\" [disabled]=\"loading\">SIGN IN</button>\r\n      <h5 class=\"bottomLink\"><a routerLink=\"/signup\">SIGN UP</a></h5>\r\n      <p class=\"text-muted\">Version:2</p>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormGroup, UntypedFormControl, UntypedFormBuilder, Validators } from '@angular/forms';\r\nimport { Router } from \"@angular/router\";\r\nimport FormsHandler from '../../shared/FormsHandler/FormsHandler';\r\nimport { AuthService } from '../../shared/auth/auth.service';\r\nimport { ValidationService } from 'src/app/shared/validators';\r\nimport { StorageService } from 'src/app/shared/services/storage.service';\r\nimport { PROJECT_ID } from 'src/constants/const';\r\n\r\n@Component({\r\n  selector: 'sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.scss']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n\r\n  loginForm: UntypedFormGroup;\r\n  loading = false;\r\n  formError;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private _fb: UntypedFormBuilder,\r\n    public auth: AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n    document.addEventListener(\"keyup\", event => {\r\n      if (event.code === 'Enter') {\r\n        this.onLogin();\r\n      }\r\n    });\r\n  }\r\n\r\n  buildForm() {\r\n    this.loginForm = this._fb.group({\r\n      'full_name': new UntypedFormControl('', [Validators.required, ValidationService.usernameValidator, Validators.minLength(4), Validators.maxLength(50)]),\r\n      'device_type': new UntypedFormControl('web', [Validators.required]),\r\n      'device_model': new UntypedFormControl('web', [Validators.required]),\r\n      'device_os_ver': new UntypedFormControl(navigator.platform, [Validators.required]),\r\n      'email': new UntypedFormControl(null, [ValidationService.emailValidator, Validators.required]),\r\n      'password': new UntypedFormControl(null, [Validators.required])\r\n    }, { updateOn: 'change' });\r\n    console.log('this.signupForm', this.loginForm);\r\n  }\r\n\r\n  onLogin() {\r\n    FormsHandler.validateForm(this.loginForm);\r\n    if (this.loginForm.invalid) return;\r\n    const saveData = this.loginForm.value;\r\n    saveData.project_id = PROJECT_ID;\r\n    this.loading = true;\r\n    this.formError = null;\r\n    this.auth.signup(saveData).subscribe(v => {\r\n      this.loading = false;\r\n      if (v && v.status == 200) {\r\n        StorageService.setUserData(v);\r\n        StorageService.setAuthToken(v.auth_token);\r\n        StorageService.setAuthUsername(v.ref_id);\r\n        this.router.navigate(['chat']);\r\n        this.loginForm.reset();\r\n      } else {\r\n        this.formError = v.message;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"containerWrapper\">\r\n  <img src=\"./assets/images/logo2.png\" class=\"logo\" />\r\n  <div class=\"innerWrapper\">\r\n    <h6 class=\"wrapperHeading\">Sign Up to your account</h6>\r\n    <p class=\"text-danger text-capitalize\">{{formError }}</p>\r\n    <div class=\"inputsContainer form-group\">\r\n      <form [formGroup]=\"loginForm\" class=\"w-100\" (submit)=\"onLogin()\">\r\n        <input type=\"text\" class=\"form-control\" placeholder=\"Your Username\" formControlName=\"full_name\" />\r\n        <form-errors [control]=\"loginForm.get('full_name')\"></form-errors>\r\n        <input type=\"email\" class=\"form-control\" placeholder=\"Your Email\" formControlName=\"email\" />\r\n        <form-errors [control]=\"loginForm.get('email')\"></form-errors>\r\n        <input type=\"password\" class=\"form-control\" placeholder=\"Your Password\" formControlName=\"password\" />\r\n        <form-errors [control]=\"loginForm.get('password')\"></form-errors>\r\n      </form>\r\n    </div>\r\n    <div class=\"buttonsContainer\">\r\n      <button type=\"submit\" class=\"signButton\" (click)=\"onLogin()\" [disabled]=\"loading\"> SIGN\r\n        UP</button>\r\n      <h5 class=\"bottomLink\"><a routerLink=\"/login\">SIGN IN</a></h5>\r\n    </div>\r\n  </div>\r\n</div>","import { UntypedFormGroup } from \"@angular/forms\";\r\n\r\nexport default class FormsHandler {\r\n\r\n    /**\r\n     * This method is use to validate Form\r\n     * @param formErrors string \r\n     * @param form  form instance | object\r\n     * @return errors as string\r\n     * @author  Mukhtiar Hussain <muhammad.mukhtiar@norgic.com>\r\n     **/\r\n    static validateForm(form) {\r\n        if (form.valid) {\r\n            return true;\r\n        } else {\r\n            if (form.controls) {\r\n                for (const field in form.controls) {\r\n                    const control = form.get(field);\r\n                    if (control.invalid) {\r\n                        control.markAsTouched({ onlySelf: true });\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    /**\r\n    * this method is use to validate Form Array\r\n    * @param formErrors string \r\n    * @param form  form instance | object\r\n    * @return errors as string\r\n    * @author  Mukhtiar Hussain <muhammad.mukhtiar@norgic.com>\r\n    **/\r\n    static validateFormArray(form) {\r\n        if (form.valid) {\r\n            return true;\r\n        } else {\r\n            if (form.controls) {\r\n                for (const group in form.controls) {\r\n                    const groupFiled = form.get(group) as UntypedFormGroup;\r\n                    for (const field in groupFiled.controls) {\r\n                        const control = groupFiled.get(field);\r\n                        if (control.invalid) {\r\n                            control.markAsTouched({ onlySelf: true });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    static deleteEmptyFileds(data) {\r\n        if (data) {\r\n            for (const key in data) {\r\n                if (data[key] == '' || data[key] == null) {\r\n                    delete data[key];\r\n                }\r\n                if (data[key] && typeof data[key] === 'string') {\r\n                    data[key] = data[key].trim();\r\n                }\r\n            }\r\n            return data;\r\n        }\r\n    }\r\n\r\n}","import { Component, Input } from '@angular/core';\r\nimport { AbstractControlDirective, AbstractControl } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'form-errors',\r\n    template: `\r\n    <p class='text-danger'>\r\n     {{hasErrors() ? listOfErrors() : ''}}\r\n    </p>`,\r\n})\r\nexport class GetErrorsComponent {\r\n\r\n    private static readonly errorMessages = {\r\n        'required': () => 'The specified information is required.',\r\n        'minlength': (params) => 'The min number of characters is ' + params.requiredLength,\r\n        'maxlength': (params) => 'The max allowed number of characters is ' + params.requiredLength,\r\n        'pattern': (params) => 'The required pattern is: ' + params.requiredPattern,\r\n        'years': (params) => params.message,\r\n        'countryCity': (params) => params.message,\r\n        'uniqueName': (params) => params.message,\r\n        'telephoneNumbers': (params) => params.message,\r\n        'telephoneNumber': (params) => params.message,\r\n        'invalidNumber': () => 'The specified information is invalid.',\r\n        'emptySpaces': () => 'The specified information is invalid.',\r\n        'email': () => 'Email is not valid',\r\n        'invalidPassword': () => 'Password must be a minimum of 8 characters and contain at least 1 uppercase character and 1 numeric value',\r\n        'invalidUsernameCharacters': () => 'invalid user name',\r\n        'invalidInputCharacters': () => 'The specified information is invalid.',\r\n        'invalidEmailAddress': () => 'Email is not valid',\r\n    };\r\n\r\n    @Input() private control: AbstractControlDirective | AbstractControl;\r\n\r\n    hasErrors(): boolean {\r\n        return this.control && this.control.errors && (this.control.dirty || this.control.touched);\r\n    }\r\n\r\n    listOfErrors() {\r\n        const errors = Object.keys(this.control.errors).map(field => this.getMessage(field, this.control.errors[field]));\r\n        return errors.length ? errors[0] : errors;\r\n    }\r\n\r\n    private getMessage(type: string, params: any) {\r\n        return GetErrorsComponent.errorMessages[type](params);\r\n    }\r\n\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { OverlayModule } from '@angular/cdk/overlay';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatLegacyTableModule as MatTableModule } from '@angular/material/legacy-table';\r\nimport { PlatformModule } from '@angular/cdk/platform';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatLegacyPaginatorModule as MatPaginatorModule } from '@angular/material/legacy-paginator';\r\nimport { MatLegacySelectModule as MatSelectModule } from '@angular/material/legacy-select';\r\nimport { MatLegacyCheckboxModule as MatCheckboxModule } from '@angular/material/legacy-checkbox';\r\nimport { MatLegacyInputModule as MatInputModule } from '@angular/material/legacy-input';\r\nimport { MatLegacyRadioModule as MatRadioModule } from '@angular/material/legacy-radio';\r\nimport { MatLegacyButtonModule as MatButtonModule } from '@angular/material/legacy-button';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatLegacySlideToggleModule as MatSlideToggleModule } from '@angular/material/legacy-slide-toggle';\r\nimport { MatLegacyTooltipModule as MatTooltipModule } from '@angular/material/legacy-tooltip';\r\nimport { MatLegacyFormFieldModule as MatFormFieldModule } from '@angular/material/legacy-form-field';\r\nimport { MatLegacyTabsModule as MatTabsModule } from '@angular/material/legacy-tabs';\r\nimport { MatLegacyProgressBarModule as MatProgressBarModule } from '@angular/material/legacy-progress-bar';\r\nimport { MatLegacyMenuModule as MatMenuModule } from '@angular/material/legacy-menu';\r\nimport { MatLegacyDialogModule as MatDialogModule } from '@angular/material/legacy-dialog';\r\nconst globalRippleConfig: RippleGlobalOptions = { disabled: true };\r\nimport {\r\n  MAT_RIPPLE_GLOBAL_OPTIONS,\r\n  RippleGlobalOptions,\r\n  MatRippleModule,\r\n  MatNativeDateModule,\r\n} from '@angular/material/core';\r\nimport {MatLegacyProgressSpinnerModule as MatProgressSpinnerModule} from '@angular/material/legacy-progress-spinner';\r\n\r\n@NgModule({\r\n    imports: [\r\n        MatFormFieldModule,\r\n        MatRippleModule,\r\n        MatDialogModule,\r\n        MatSortModule,\r\n        MatPaginatorModule,\r\n        CdkTableModule,\r\n        DragDropModule,\r\n        PortalModule,\r\n        CommonModule,\r\n        MatSelectModule,\r\n        MatCheckboxModule,\r\n        MatInputModule,\r\n        MatRadioModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatTabsModule,\r\n        MatButtonModule,\r\n        MatTableModule,\r\n        MatSlideToggleModule,\r\n        OverlayModule,\r\n        MatTooltipModule,\r\n        MatProgressBarModule,\r\n        MatMenuModule,\r\n        MatProgressSpinnerModule\r\n    ],\r\n    declarations: [],\r\n    providers: [\r\n        { provide: MAT_RIPPLE_GLOBAL_OPTIONS, useValue: globalRippleConfig }\r\n    ],\r\n    exports: [\r\n        MatFormFieldModule,\r\n        PlatformModule,\r\n        MatRippleModule,\r\n        MatSortModule,\r\n        MatPaginatorModule,\r\n        CdkTableModule,\r\n        DragDropModule,\r\n        OverlayModule,\r\n        PortalModule,\r\n        MatSelectModule,\r\n        MatCheckboxModule,\r\n        MatInputModule,\r\n        MatRadioModule,\r\n        MatDatepickerModule,\r\n        MatNativeDateModule,\r\n        MatTabsModule,\r\n        MatTableModule,\r\n        MatSlideToggleModule,\r\n        MatButtonModule,\r\n        MatTooltipModule,\r\n        MatProgressBarModule,\r\n        LayoutModule,\r\n        MatProgressSpinnerModule\r\n    ]\r\n})\r\nexport class AppMaterialModule { }\r\n","import { CanActivate, Router } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private authService: AuthService,\r\n    protected router: Router\r\n  ) { }\r\n\r\n  canActivate() {\r\n    const isAuthenticated = this.authService.isAuthenticated();\r\n    if (!isAuthenticated) {\r\n      this.router.navigate(['login']);\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n}","import { Injectable } from '@angular/core';\r\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { StorageService } from '../services/storage.service';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n  public userSubject$ = new Subject();\r\n  public currentUserReq$;\r\n  public currentUserId;\r\n  public userSubject = new ReplaySubject<any>(1);\r\n  private userRequest: Observable<any>;\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  login(data): Observable<any> {\r\n    return this.http.post('Login', data);\r\n  }\r\n\r\n  signup(data): Observable<any> {\r\n    return this.http.post('SignUp', data);\r\n  }\r\n\r\n  logout(): void {\r\n    StorageService.clearLocalStorge();\r\n  }\r\n\r\n  getToken(): string {\r\n    return StorageService.getAuthToken()\r\n  }\r\n\r\n  isAuthenticated(): boolean {\r\n    return !!this.getToken();\r\n  }\r\n\r\n  islogin(): boolean {\r\n    return !!this.getToken();\r\n  }\r\n\r\n  resetUser() {\r\n    this.currentUserId = null;\r\n    this.userRequest = null;\r\n    this.userSubject = new ReplaySubject(1);\r\n  }\r\n\r\n  getUserId() {\r\n    const userdata = StorageService.getUserData();\r\n    return userdata._id;\r\n  }\r\n\r\n  isAuthUser(): Observable<any> {\r\n    return this.http.get<any>('users/current-user');\r\n  }\r\n}\r\n","\r\nexport function isEmptyObj(obj) {\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function isEmptyArray(array) {\r\n    if (!Array.isArray(array) || !array.length) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function isEmail(email) {\r\n    const emailLowercase = email.toLowerCase();\r\n    if (email == null || emailLowercase.match(/^[\\w-]+(\\.[\\w-]+)*@([a-z0-9-]+(\\.[a-z0-9-]+)*?\\.[a-zA-Z]{2,6}|(\\d{1,3}\\.){3}\\d{1,3})(:\\d{4})?$/)) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nexport function FindObjectByValue(inputArray: Array<any>, value: string) {\r\n    return inputArray.find(e => e == value);\r\n}\r\n\r\nexport function FindArrayObject(inputArray, key, value) {\r\n    return inputArray.find(e => e[key] == value);\r\n}\r\n\r\nexport function AutoUnsubscribe(constructor) {\r\n    const original = constructor.prototype.ngOnDestroy;\r\n    constructor.prototype.ngOnDestroy = function () {\r\n        for (const prop in this) {\r\n            if (prop) {\r\n                const property = this[prop];\r\n                if (property && (typeof property.unsubscribe === 'function')) {\r\n                    property.unsubscribe();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (original && typeof original === 'function') {\r\n            original.apply(this, arguments)\r\n        };\r\n    };\r\n\r\n}\r\nexport function isMobile() {\r\n    return window.innerWidth < 768\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable, of } from 'rxjs';\r\nimport { debounce, debounceTime, map } from 'rxjs/operators';\r\nimport { BaseService } from '../services/base.service';\r\n\r\n@Pipe({\r\n  name: 'filter'\r\n})\r\nexport class filterPipe implements PipeTransform {\r\n\r\n  constructor(\r\n    private toastr: ToastrService,\r\n    private svc: BaseService\r\n  ) {\r\n  }\r\n\r\n  transform(items: any[], value: string): Observable<any> {\r\n    if (!items) return of([]);\r\n    if (!value) return of(items);\r\n    const data = {\r\n      \"search_field\": \"full_name\",\r\n      \"search_value\": value,\r\n      \"condition\": \"contains\",\r\n    }\r\n    return this.svc.post('AllUsers', data).pipe(\r\n      debounceTime(500),\r\n      map(res => {\r\n        if (res.status == 400) {\r\n          this.toastr.error(\"No contacts found\", \"Opps!\");\r\n          return [];\r\n        }\r\n        return res.users;\r\n      })\r\n    )\r\n  }\r\n}","import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n    name: \"formatTime\"\r\n  })\r\n  export class FormatTimePipe implements PipeTransform {\r\n    transform(value: number): string {\r\n      const minutes: number = Math.floor(value / 60);\r\n      return (\r\n        (\"00\" + minutes).slice(-2) +\r\n        \":\" +\r\n        (\"00\" + Math.floor(value - minutes * 60)).slice(-2)\r\n      );\r\n    }\r\n  }","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n@Pipe({\r\n    name: 'safeUrl'\r\n})\r\nexport class SafeUrlPipe implements PipeTransform {\r\n    constructor(private domSanitizer: DomSanitizer) { }\r\n    transform(url) {\r\n        return this.domSanitizer.bypassSecurityTrustResourceUrl(url);\r\n    }\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Observable, ReplaySubject, Subject } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class BaseService {\r\n\r\n  constructor(\r\n    protected http: HttpClient\r\n  ) { }\r\n\r\n  public userData = new ReplaySubject<any>();\r\n  userData$ = this.userData.asObservable();\r\n\r\n  public isLoading = new Subject<any>();\r\n  isLoadingResponse = this.isLoading.asObservable();\r\n\r\n  /**\r\n  * This method is used to Call API using Http GET method.\r\n  * @param URL \r\n  * @return obserables responsce\r\n  * @author  Muhammad Mukhtiar  <muhammad.mukhtiar@norgic.com>\r\n  **/\r\n  get(URL): Observable<any> {\r\n    return this.http.get(URL);\r\n  }\r\n\r\n  /**\r\n  * This method is use to add or update data using API \r\n  * @param formData \r\n  * @return obserables responsce\r\n  * @author  Mukhtiar Hussain <muhammad.mukhtiar@norgic.com>\r\n  **/\r\n  save(URL, data = {}): Observable<any> {\r\n    return this.http.post(URL, data);\r\n  }\r\n\r\n  /**\r\n  * This method is used to Call API using Http Post method. \r\n  * @param URL \r\n  * @param URL \r\n  * @return obserables responsce\r\n  * @author  Mukhtiar Hussain <muhammad.mukhtiar@norgic.com>\r\n  **/\r\n  post(URL: string, payload: any = {}): Observable<any> {\r\n    return this.http.post(URL, payload);\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpEvent, HttpResponse, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { StorageService } from './storage.service';\r\nimport { environment } from '../../../environments/environment';\r\nimport { BaseService } from './base.service';\r\n\r\n@Injectable()\r\nexport class HttpService implements HttpInterceptor {\r\n    private baseUrl = environment.apiBaseUrl;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private svc: BaseService\r\n    ) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        req = this.getModifiedReq(req);\r\n        return next.handle(req)\r\n            .pipe(\r\n                tap(event => {\r\n                    if (event instanceof HttpResponse) {\r\n                        if (event && event.body) {\r\n                            const serRes = event.body;\r\n                            this.svc.isLoading.next(false);\r\n                            if (serRes.code === 401) {\r\n                                StorageService.clearLocalStorge();\r\n                                this.showErrorMsg(serRes.message);\r\n                                this.router.navigate(['/login']);\r\n                            } else if (serRes.code === 407) {\r\n                                // StorageService.clearLocalStorge();\r\n                                this.showErrorMsg(serRes.message);\r\n                                // this.router.navigate(['/auth/login']);\r\n                            } else if (serRes.code === 200 || serRes.code === 201) {\r\n                            } else {\r\n                                this.showErrorMsg(serRes.message);\r\n                            }\r\n                        }\r\n\r\n                    }\r\n                }),\r\n                catchError(errorRes => {\r\n                    this.svc.isLoading.next(false);\r\n                    console.log('this should print your error!', errorRes.error);\r\n                    if (errorRes instanceof HttpErrorResponse) {\r\n                        if (errorRes.status === 500) {\r\n                            // this.toastrService.danger('Opps!', \"Something went wrong\");\r\n                        } else {\r\n                            this.showErrorMsg(errorRes.message);\r\n                        }\r\n                    }\r\n                    return throwError(errorRes);\r\n                })\r\n            );\r\n    };\r\n\r\n    getModifiedReq(req: HttpRequest<any>): HttpRequest<any> {\r\n        req = req.clone({ url: this.baseUrl + req.url });\r\n        const formdata = JSON.stringify(req.body);\r\n        const auth_token = StorageService.getAuthToken();\r\n        if (auth_token) req = req.clone({ headers: req.headers.set('Authorization', 'Bearer ' + auth_token) });\r\n        req = req.clone({ headers: req.headers.set('Content-Type', 'application/json') });\r\n        req = req.clone({ body: formdata });\r\n        return req;\r\n    }\r\n\r\n    showErrorMsg(errorResponse) {\r\n        if (typeof errorResponse == 'string') {\r\n            // this.toastrService.danger('Opps!', errorResponse);\r\n        }\r\n\r\n    }\r\n}","import { Injectable, OnDestroy, Output } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { StorageService } from './storage.service';\r\nimport { PROJECT_ID } from 'src/constants/const';\r\ndeclare const MVDOTOK: any;\r\n\r\n@Injectable()\r\nexport class PubsubService implements OnDestroy {\r\n  @Output()\r\n  protected wsSubscription: Subscription;\r\n  public Client: any;\r\n\r\n  constructor() { }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.wsSubscription.unsubscribe();\r\n  }\r\n\r\n  public initConfigure(): void {\r\n    const user = StorageService.getUserData();\r\n    this.Client = new MVDOTOK.Client({\r\n      projectID: PROJECT_ID,\r\n      host: `${user.messaging_server_map.complete_address}`\r\n    });\r\n    this.Client.Register(user.ref_id.toString(), user.authorization_token.toString());\r\n  }\r\n\r\n  public sendMessage(message): void {\r\n    this.Client.SendMessage(message);\r\n  }\r\n\r\n  public subscribeToChat(groups): void {\r\n    groups.map(chanelObj => {\r\n      this.Client.Subscribe(chanelObj);\r\n    });\r\n  }\r\n\r\n\r\n  public unsubscribeToChat(groups): void {\r\n    this.Client.UnSubscribe(groups);\r\n  }\r\n\r\n  public Disconnect(): void {\r\n    this.Client.Disconnect();\r\n  }\r\n\r\n  readMessage(chatMessages) {\r\n    chatMessages.map(chat => {\r\n      this.Client.SendReceipt(chat);\r\n    });\r\n  }\r\n\r\n  readSingleMessage(chatMessages) {\r\n    this.Client.SendReceipt(chatMessages);\r\n  }\r\n\r\n  sendNotificationOnGroupUpdation(obj) {\r\n    console.log(\"** sendNotificationOnGroupUpdation\")\r\n    this.Client.SendNotification(obj);\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\n@Injectable()\r\nexport class StorageService {\r\n\r\n  static readonly STORAGE_KEY_AUTH_TOKEN = 'auth_token';\r\n  static readonly STORAGE_KEY_USER_NAME = 'username';\r\n  static readonly STORAGE_KEY_USER_DATA = 'user_data';\r\n\r\n  static clearLocalStorge() {\r\n    localStorage.clear();\r\n    sessionStorage.clear();\r\n    return;\r\n  }\r\n\r\n  static getAuthToken() {\r\n    return localStorage.getItem(StorageService.STORAGE_KEY_AUTH_TOKEN);\r\n  }\r\n\r\n  static setAuthToken(token) {\r\n    localStorage.setItem(StorageService.STORAGE_KEY_AUTH_TOKEN, token);\r\n  }\r\n\r\n  static removeAuthToken() {\r\n    localStorage.removeItem(StorageService.STORAGE_KEY_AUTH_TOKEN);\r\n  }\r\n\r\n  static getAuthUsername() {\r\n    return localStorage.getItem(StorageService.STORAGE_KEY_USER_NAME);\r\n  }\r\n\r\n  static setAuthUsername(username) {\r\n    localStorage.setItem(StorageService.STORAGE_KEY_USER_NAME, username);\r\n  }\r\n\r\n  static removeAuthUsername() {\r\n    localStorage.removeItem(StorageService.STORAGE_KEY_USER_NAME);\r\n  }\r\n\r\n  static setUserData(userData) {\r\n    localStorage.setItem(StorageService.STORAGE_KEY_USER_DATA, JSON.stringify(userData));\r\n  }\r\n\r\n  static getUserData() {\r\n    return JSON.parse(localStorage.getItem(StorageService.STORAGE_KEY_USER_DATA));\r\n  }\r\n\r\n  static removeUserData() {\r\n    localStorage.removeItem(StorageService.STORAGE_KEY_USER_DATA);\r\n  }\r\n\r\n}\r\n","import { Injectable, Output } from '@angular/core';\r\nimport { StorageService } from './storage.service';\r\nimport { PROJECT_ID } from 'src/constants/const';\r\ndeclare const CVDOTOK: any;\r\n\r\n@Injectable()\r\nexport class VdkM2MCallService {\r\n  @Output() public Client: any;\r\n  constructor() { }\r\n\r\n  public initConfigure(): void {\r\n    this.Client = new CVDOTOK.ManyToMany({\r\n      projectId: PROJECT_ID,\r\n      secret: \"3d9686b635b15b5bc2d19800407609fa\",\r\n    });\r\n    this.Client.on(\"connected\", (res) => {\r\n      let user = StorageService.getUserData();\r\n      this.Client.Register(\r\n        user.ref_id.toString(),\r\n        user.authorization_token.toString()\r\n      );\r\n    });\r\n  }\r\n\r\n  groupCall(params): void {\r\n    this.Client.GroupCall(params);\r\n  }\r\n\r\n  joinGroupCall(params): void {\r\n    this.Client.JoinGroupCall(params);\r\n  }\r\n\r\n  leaveGroupCall(): void {\r\n    this.Client.LeaveGroupCall();\r\n  }\r\n\r\n  setCameraOn(): void {\r\n    this.Client.SetCameraOn();\r\n  }\r\n\r\n  setCameraOff(): void {\r\n    this.Client.SetCameraOff();\r\n  }\r\n\r\n  setMicMute(): void {\r\n    this.Client.SetMicMute();\r\n  }\r\n\r\n  setMicUnmute(): void {\r\n    this.Client.SetMicUnmute();\r\n  }\r\n\r\n  setParticipantVideo(participant, vidio) {\r\n    this.Client.SetParticipantVideo(participant, vidio);\r\n  }\r\n\r\n}\r\n","import { Injectable, Output } from '@angular/core';\r\nimport { StorageService } from './storage.service';\r\nimport { PROJECT_ID } from 'src/constants/const';\r\ndeclare const CVDOTOK: any;\r\n\r\n@Injectable()\r\nexport class VdkOne2OneCallService {\r\n  @Output() public Client: any;\r\n\r\n  constructor() { }\r\n  public initConfigure(): void {\r\n    const user = StorageService.getUserData();\r\n    this.Client = new CVDOTOK.Client({\r\n      projectId: PROJECT_ID,\r\n      host: `wss://r-stun2.vdotok.dev:8443/call`,\r\n      stunServer: `${user.stun_server_map.complete_address}`\r\n    });\r\n    this.Client.on(\"connected\", (res) => {\r\n      let user = StorageService.getUserData();\r\n      this.Client.Register(\r\n        user.ref_id.toString(),\r\n        user.authorization_token.toString()\r\n      );\r\n    });\r\n  }\r\n\r\n  public Disconnect(): void {\r\n    // this.Client.Disconnect();\r\n  }\r\n\r\n  Call(params): void {\r\n    this.Client.Call(params);\r\n  }\r\n\r\n  audioCall(params): void {\r\n    this.Client.AudioCall(params);\r\n  }\r\n\r\n  acceptCall(params): void {\r\n    this.Client.AcceptCall(params);\r\n  }\r\n\r\n  rejectCall(from , val): void {\r\n    this.Client.RejectCall(from , val);\r\n  }\r\n\r\n  endCall(): void {\r\n    this.Client.EndCall();\r\n  }\r\n\r\n\r\n  cancelCall(): void {\r\n    this.Client.CancelCall();\r\n  }\r\n\r\n  setCameraOn(): void {\r\n    this.Client.SetCameraOn();\r\n  }\r\n\r\n  setCameraOff(): void {\r\n    this.Client.SetCameraOff();\r\n  }\r\n\r\n  setMicMute(): void {\r\n    this.Client.SetMicMute();\r\n  }\r\n\r\n  setMicUnmute(): void {\r\n    this.Client.SetMicUnmute();\r\n  }\r\n\r\n\r\n  groupCall(params): void {\r\n    this.Client.GroupCall(params);\r\n  }\r\n\r\n  joinGroupCall(params): void {\r\n    this.Client.JoinGroupCall(params);\r\n  }\r\n\r\n  leaveGroupCall(): void {\r\n    this.Client.LeaveGroupCall();\r\n  }\r\n\r\n  setParticipantVideo(participant, vidio) {\r\n    this.Client.SetParticipantVideo(participant, vidio);\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { StorageService } from './services/storage.service';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { AuthGuard } from './auth/auth-guard.service';\r\nimport { BaseService } from './services/base.service';\r\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { HttpService } from './services/http.service';\r\nimport { PubsubService } from './services/pubsub.service';\r\nimport { GetErrorsComponent } from './FormsHandler/get-errors.component';\r\nimport { MAT_LEGACY_DIALOG_DEFAULT_OPTIONS as MAT_DIALOG_DEFAULT_OPTIONS } from '@angular/material/legacy-dialog';\r\nimport { filterPipe } from './pipe/filter';\r\nimport { SafeUrlPipe } from './pipe/safeurl';\r\nimport { FormatTimePipe } from './pipe/formatTime';\r\nimport { VdkM2MCallService } from './services/vdk-m2m-call.service';\r\nimport { VdkOne2OneCallService } from './services/vdk-one2one-call.service';\r\n\r\nconst components = [\r\n  GetErrorsComponent,\r\n  filterPipe,\r\n  SafeUrlPipe,\r\n  FormatTimePipe\r\n]\r\n\r\n@NgModule({\r\n  imports: [\r\n    RouterModule,\r\n    CommonModule,\r\n  ],\r\n  declarations: [...components],\r\n  exports: [...components],\r\n  providers: [\r\n    StorageService,\r\n    AuthService,\r\n    AuthGuard,\r\n    BaseService,\r\n    PubsubService,\r\n    VdkOne2OneCallService,\r\n    VdkM2MCallService,\r\n    { provide: MAT_DIALOG_DEFAULT_OPTIONS, useValue: { hasBackdrop: false } },\r\n    { provide: HTTP_INTERCEPTORS, useClass: HttpService, multi: true },\r\n  ],\r\n})\r\nexport class SharedModule { }\r\n","\r\nimport { AbstractControl } from '@angular/forms';\r\n\r\n\r\n\r\nexport class ValidationService {\r\n\r\n    static specialCharValidator(control) {\r\n        if (control.value == null || control.value.match(/^[a-zA-Z0-9._]*$/)) {\r\n            return null;\r\n        } else {\r\n\r\n            return { 'invalidCharacters': true };\r\n        }\r\n    }\r\n\r\n    static uppercaseCharacterRule(amount: number): any {\r\n        return function validate(control): { [key: string]: any } {\r\n            const value: string = control.value;\r\n            if (value.length === 0) {\r\n                return undefined;\r\n            }\r\n            const pattern = /[^A-Z]+/g;\r\n            const stripped = value.replace(pattern, '');\r\n            if (stripped.length < amount) {\r\n                return { 'uppercaseCharacterRule': true };\r\n            }\r\n            return undefined;\r\n        };\r\n    }\r\n\r\n    static creditCardValidator(control) {\r\n        // Visa, MasterCard, American Express, Diners Club, Discover, JCB\r\n        if (control.value.match(/^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidCreditCard': true };\r\n        }\r\n    }\r\n\r\n    static emailValidator(control) {\r\n        // RFC 2822 compliant regex\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        const emailLowercase = control.value.toLowerCase();\r\n        if (control.value == null || emailLowercase.match(/^[\\w-]+(\\.[\\w-]+)*@([a-z0-9-]+(\\.[a-z0-9-]+)*?\\.[a-zA-Z]{2,6}|(\\d{1,3}\\.){3}\\d{1,3})(:\\d{4})?$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidEmailAddress': true };\r\n        }\r\n    }\r\n\r\n\r\n    static isEmptyInputValue(value: any): boolean {\r\n        // we don't check for string here so it also works with arrays\r\n        return value == null || value.length === 0;\r\n    }\r\n\r\n    static emptySpacesValidator(control) {\r\n        console.log('emptySpacesValidator', control, control.value);\r\n        if (control.value.match(/([^\\s])/)) {\r\n            return null;\r\n        } else {\r\n            return { 'emptySpaces': true };\r\n        }\r\n    }\r\n\r\n    static removeSpace(value: any): string {\r\n        return value.trim()\r\n    }\r\n\r\n    static englishWordsValidator(control) {\r\n        console.log('englishWordsValidator', control);\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        const tempstring = ValidationService.removeSpace(control.value);\r\n        if (tempstring.match(/^[a-zA-Z]+( [\\&a-zA-Z]+)*$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidCharacters': true };\r\n        }\r\n    }\r\n\r\n    static nameValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        if (control.value.match(/^(?:[a-zA-Z0-9\\s@,=%$#&_\\u0600-\\u06FF\\u0750-\\u077F\\u08A0-\\u08FF\\uFB50-\\uFDCF\\uFDF0-\\uFDFF\\uFE70-\\uFEFF]|(?:\\uD802[\\uDE60-\\uDE9F]|\\uD83B[\\uDE00-\\uDEFF])){0,30}$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidNameCharacters': true };\r\n        }\r\n    }\r\n\r\n\r\n    static whiteSpaceValidator(control) {\r\n        // RFC 2822 compliant regex\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n\r\n        if (control.value.match(/^[-a-zA-Z\\u0600-\\u06FF0-9-()]+(\\s+[-a-zA-Z\\u0600-\\u06FF0-9-()]+)*$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidWhiteSpace': true };\r\n        }\r\n    }\r\n\r\n\r\n    static phoneValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        if (control.value.match(/^\\+?[0-9]+$/g)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidPhone': true };\r\n        }\r\n    }\r\n\r\n    static phoneUsernameEmailValidator(control) {\r\n        if (control.value == null) return;\r\n        let validEmail = true, validPhone = true, validUsername = true;\r\n        if (ValidationService.emailValidator(control) != null) {\r\n            validEmail = false;\r\n        }\r\n        if (!control.value.match(/^[a-zA-Z0-9]{5,17}$/)) {\r\n            validUsername = false;\r\n        }\r\n        if (!control.value.match(/^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/)) {\r\n            validPhone = false;\r\n        }\r\n        console.log('phoneUsernameEmailValidator', ValidationService.emailValidator(control), validEmail, validUsername, validPhone)\r\n        if (validEmail || validUsername || validPhone) return null;\r\n        return { 'invalidUsernameEmail': true };\r\n    }\r\n\r\n    static usernameValidator(control) {\r\n        // RFC 2822 compliant regex\r\n        if (control.value == null || control.value.match(/^[a-zA-Z0-9]+$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidUsernameCharacters': true };\r\n        }\r\n    }\r\n\r\n    static passwordValidator(control) {\r\n        // {8,100}           - Assert password is between 8 and 100 characters\r\n        // (?=.*[0-9])       - Assert a string has at least one number\r\n        if (control.value && !ValidationService.uppercaseCharacterRule(1)(control) && control.value.match(/^(?=.*[0-9])[a-zA-Z0-9!@#$%^&*]{6,100}$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidPassword': true };\r\n        }\r\n    }\r\n\r\n    static MatchPassword(control: AbstractControl, crud) {\r\n        if (control.value == null) return null;\r\n        return control.root.get('password').value != control.value ? { passworMismatch: true } : null;\r\n    }\r\n\r\n\r\n    static pinCodeValidator(control) {\r\n        if (control.value && control.value.match(/^[0-9]{4}$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidPinCode': true };\r\n        }\r\n    }\r\n\r\n\r\n    static trimData(data) {\r\n        if (data) {\r\n            for (const key in data) {\r\n                if (data[key] && typeof data[key] == \"string\") {\r\n                    data[key] = data[key].trim();\r\n                }\r\n            }\r\n            return data;\r\n        }\r\n    }\r\n\r\n\r\n    static checkInteger(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        if (parseFloat(control.value) == 0 || (parseFloat(control.value) || parseInt(control.value)) && !isNaN(control.value)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidNumber': true };\r\n        }\r\n    }\r\n\r\n\r\n    static alphnumericValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        if (ValidationService.whiteSpaceValidator(control.value)) return;\r\n        // if (control.value.match(/^[^±!@£$%^&*_+§¡€#¢§¶•ªº«\\\\/<>?:;|=.,0-9]{1,500}$/)) {\r\n        if (control.value.match(/^[a-zA-Z0-9-,]+(\\s{0,1}[a-zA-Z-, ])*$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidInputCharacters': true };\r\n        }\r\n    }\r\n\r\n\r\n    static stringvalidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        if (control.value.match(/^[a-zA-Z0-9-,]+(\\s{0,1}[a-zA-Z-, ])*$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidInputCharacters': true };\r\n        }\r\n    }\r\n\r\n    static disallowspecial(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        if (control.value.match(/^[A-Za-z0-9 ]+$/)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidInputCharacters': true };\r\n        }\r\n    }\r\n\r\n\r\n\r\n    static alphValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        if (control.value.match(/^\\+?[A-Za-z]+$/g)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidString': true };\r\n        }\r\n    }\r\n\r\n    static numericValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        if (ValidationService.whiteSpaceValidator(control.value)) return;\r\n        const value = control.value.toString()\r\n        if (value.match(/^\\+?[0-9]+$/g)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidNumeric': true };\r\n        }\r\n    }\r\n\r\n    static floatNumberValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        const value = control.value.toString()\r\n        if (value.match(/^[+-]?\\d+(\\.\\d+)?$/g)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidNumeric': true };\r\n        }\r\n    }\r\n\r\n\r\n    static mackAddressValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        const value = control.value.toString()\r\n        if (value.match(/^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$/g)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidMackAddress': true };\r\n        }\r\n    }\r\n\r\n\r\n    static gatewayAddressValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        const value = control.value.toString()\r\n        if (value.match(/^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$/g)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidMackAddress': true };\r\n        }\r\n    }\r\n\r\n\r\n    static ipValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        const value = control.value.toString()\r\n        if (value.match(/^(\\d|[1-9]\\d|1\\d\\d|2([0-4]\\d|5[0-5]))\\.(\\d|[1-9]\\d|1\\d\\d|2([0-4]\\d|5[0-5]))\\.(\\d|[1-9]\\d|1\\d\\d|2([0-4]\\d|5[0-5]))\\.(\\d|[1-9]\\d|1\\d\\d|2([0-4]\\d|5[0-5]))$/g)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidIp': true };\r\n        }\r\n    }\r\n\r\n\r\n    static domainNameValidator(control) {\r\n        if (ValidationService.isEmptyInputValue(control.value)) return null;\r\n        const value = control.value.toString()\r\n        if (value.match(/^(?=^.{1,254}$)(^(?:(?!\\d+\\.)[a-zA-Z0-9_\\-]{1,63}\\.?)+(?:[a-zA-Z]{2,})$)/g)) {\r\n            return null;\r\n        } else {\r\n            return { 'invalidDomainName': true };\r\n        }\r\n    }\r\n\r\n}\r\n","export const PROJECT_ID = \"1RN1RP\";","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false,\r\n  apiBaseUrl : 'https://q-tenant.vdotok.dev/API/v0/'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":["RouterModule","ChatComponent","LoginComponent","SignUpComponent","AuthGuard","routes","path","component","canActivate","redirectTo","AppRoutingModule","forRoot","imports","exports","AppComponent","constructor","selectors","decls","vars","template","i0","BrowserModule","FormsModule","ReactiveFormsModule","CommonModule","BrowserAnimationsModule","AppMaterialModule","HttpClientModule","SharedModule","AddGroupComponent","NewChatComponent","ToastrModule","AppModule","bootstrap","maxOpened","preventDuplicates","declarations","EventEmitter","UntypedFormControl","Validators","FormsHandler","StorageService","fromEvent","map","debounceTime","distinctUntilChanged","mergeMap","startWith","of","pubsubService","svc","toastr","_fb","changeDetector","getAuthUsername","getUserData","chatHistory","ngOnInit","form","group","required","maxLength","updateOn","document","addEventListener","event","code","loading","addGroup","ngAfterViewInit","searchInput","nativeElement","pipe","target","value","data","sorting","search_field","search_value","condition","post","res","users","length","CopyAllUsers","temparaay","filteruser","filter","user","searchValue","toLowerCase","full_name","startsWith","returnData","subscribe","error","AllUsers","setAlreadySelected","selectedUsers","userIndex","find","alluser","user_id","detectChanges","selectContact","contact","groupnameError","push","selected","Set","console","openDialog","content","useridArray","participants","auto_created","group_title","v","status","setActiveChat","emit","reset","changeEvent","addGroupModel","validateForm","log","invalid","participants_ref_ids","p","ref_id","groupInfo","from","to","action","groupModel","sendNotificationOnGroupUpdation","success","closemodel","forEach","element","backScreen","viewQuery","ctx","FindArrayObject","timer","selectedTemplate","templateList","noCall","incommingAudioCall","outgoingAudioCall","AudioCallInProgress","incommingVideoCall","outgoingVideoCall","VideoCallInProgress","groupIncommingAudioCall","groupOutgoingAudioCall","groupOngoingAudioCall","groupIncommingVideoCall","groupVideoCall","calling","templateName","vdkOne2OneCallSVC","vdkM2MCallSVC","router","elRef","dialog","participant","callType","callerName","session","uuid","isOnInProgressCamara","isOnInProgressMicrophone","groupForm","initConfigure","Client","on","response","sdkconnected","AllGroups","getAllGroups","ongoingCall","type","rejectCall","findUserName","screen","resetCall","startWatch","displaystyle","video_status","callerHolderstyle","getElementById","style","display","groupOutgoingVideoCall","addParticipant","removeParticipant","chatDCall","sendTextMessage","getUsers","setOfflineStatus","setOnlineStatus","setOnlineStatusforSubscribe","JSON","parse","stringify","updateGroup","scroll","chatthread","findChatThread","isActiveThread","id","activeChat","messageBy","Date","pushMessage","readSingleMessage","setTimeout","sort","a","b","setUserTyping","receiptType","chName","topic","undefined","message","messageId","messageInputElement","sendMessage","size","isGroupMessage","getTime","toString","key","channel_key","channel_name","date","grp_info","new_group","i","findIndex","grp","chat","subscribedata","channel","subscribeToChat","r","setActiveChatt","index","splice","unsubscribeToChat","chatTitle","grp_ind","g","editGroup","playload","group_id","editGroupModel","deleteGroup","alert","get","groups","setToActive","indexchat","sortThread","openModal","checkFileType","preview","includes","fileType","split","readsendMessage","setChatDuringCall","el","removeAttribute","returntoCall","setchat","clicked_item","startone2oneAudioCall","startOne2OneVideoCall","currentUserName","chatobj","unreadchatHistory","isRead","readMessage","handleFileInput","files","fileToSend","item","invalidSize","removeAttachment","getFileType","fileR","filetype","test","option","toBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","base64","SendFile","typingmessage","$event","onlineNumbers","who","n","username","currentUserData","typinguser","e","nameList","userObj","join","j","setMultiUserTyping","querySelector","scrollTop","scrollHeight","changeSidebar","threadType","newChat","logout","Disconnect","clearLocalStorge","navigate","isShowName","messageByObj","previourmessage","thread","newResponse","foundIndex","x","getLastMessage","isactivethread","unReadCount","lastMessage","openImage","imagesrc","popupimagesrc","closeImage","closeModal","isHideThread","isMobile","isHideChatScreen","window","innerWidth","settings","callTime","countDownTime","unsubscribe","stopCall","endCall","leaveGroupCall","inCall","startVideoCall","startM2MVideoCall","participantsList","params","localVideo","remoteVideo","audio","video","Call","getChatParticipants","timeout","isPeer","groupCall","acceptcall","acceptOne2oneCall","acceptM2MCall","acceptCall","sessionUUID","isM2MProgressCall","joinGroupCall","startAudioCall","startm2mAudioCall","calleName","audioCall","changeSettings","filed","changeOne2OneSettings","changeM2MSettings","setCameraOn","setCameraOff","setMicUnmute","setMicMute","enabled","audiotrack","audioTracks","displayNamestyle","isShowRemoteVideo","isHideLocalVideo","ishide","isShowOne2oneCall","one2onetemplateList","isShowM2MCall","setParticipantVideo","textmsg","addGroupEvent","startChat","val","PROJECT_ID","auth","islogin","buildForm","onLogin","loginForm","minLength","saveData","project_id","formError","login","setUserData","setAuthToken","auth_token","setAuthUsername","ngOnDestroy","consts","ValidationService","usernameValidator","navigator","platform","emailValidator","signup","valid","controls","field","control","markAsTouched","onlySelf","validateFormArray","groupFiled","deleteEmptyFileds","trim","GetErrorsComponent","requiredLength","requiredPattern","hasErrors","errors","dirty","touched","listOfErrors","Object","keys","getMessage","errorMessages","inputs","OverlayModule","PortalModule","CdkTableModule","DragDropModule","LayoutModule","MatLegacyTableModule","MatTableModule","PlatformModule","MatSortModule","MatLegacyPaginatorModule","MatPaginatorModule","MatLegacySelectModule","MatSelectModule","MatLegacyCheckboxModule","MatCheckboxModule","MatLegacyInputModule","MatInputModule","MatLegacyRadioModule","MatRadioModule","MatLegacyButtonModule","MatButtonModule","MatDatepickerModule","MatLegacySlideToggleModule","MatSlideToggleModule","MatLegacyTooltipModule","MatTooltipModule","MatLegacyFormFieldModule","MatFormFieldModule","MatLegacyTabsModule","MatTabsModule","MatLegacyProgressBarModule","MatProgressBarModule","MatLegacyMenuModule","MatMenuModule","MatLegacyDialogModule","MatDialogModule","MAT_RIPPLE_GLOBAL_OPTIONS","MatRippleModule","MatNativeDateModule","MatLegacyProgressSpinnerModule","MatProgressSpinnerModule","globalRippleConfig","disabled","provide","useValue","authService","isAuthenticated","factory","ReplaySubject","Subject","AuthService","http","getToken","getAuthToken","resetUser","currentUserId","userRequest","userSubject","getUserId","userdata","_id","isAuthUser","isEmptyObj","obj","hasOwnProperty","isEmptyArray","array","Array","isArray","isEmail","email","emailLowercase","match","FindObjectByValue","inputArray","AutoUnsubscribe","original","prototype","prop","property","apply","arguments","filterPipe","transform","items","pure","FormatTimePipe","minutes","Math","floor","slice","SafeUrlPipe","domSanitizer","url","bypassSecurityTrustResourceUrl","BaseService","userData","asObservable","isLoading","URL","save","payload","HttpResponse","HttpErrorResponse","throwError","catchError","tap","environment","HttpService","apiBaseUrl","intercept","req","next","getModifiedReq","handle","body","serRes","showErrorMsg","errorRes","clone","baseUrl","formdata","headers","set","errorResponse","PubsubService","wsSubscription","MVDOTOK","projectID","host","messaging_server_map","complete_address","Register","authorization_token","SendMessage","chanelObj","Subscribe","UnSubscribe","chatMessages","SendReceipt","SendNotification","localStorage","clear","sessionStorage","getItem","STORAGE_KEY_AUTH_TOKEN","token","setItem","removeAuthToken","removeItem","STORAGE_KEY_USER_NAME","removeAuthUsername","STORAGE_KEY_USER_DATA","removeUserData","VdkM2MCallService","CVDOTOK","ManyToMany","projectId","secret","GroupCall","JoinGroupCall","LeaveGroupCall","SetCameraOn","SetCameraOff","SetMicMute","SetMicUnmute","vidio","SetParticipantVideo","VdkOne2OneCallService","stunServer","stun_server_map","AudioCall","AcceptCall","RejectCall","EndCall","cancelCall","CancelCall","HTTP_INTERCEPTORS","MAT_LEGACY_DIALOG_DEFAULT_OPTIONS","MAT_DIALOG_DEFAULT_OPTIONS","components","hasBackdrop","useClass","multi","specialCharValidator","uppercaseCharacterRule","amount","validate","pattern","stripped","replace","creditCardValidator","isEmptyInputValue","emptySpacesValidator","removeSpace","englishWordsValidator","tempstring","nameValidator","whiteSpaceValidator","phoneValidator","phoneUsernameEmailValidator","validEmail","validPhone","validUsername","passwordValidator","MatchPassword","crud","root","passworMismatch","pinCodeValidator","trimData","checkInteger","parseFloat","parseInt","isNaN","alphnumericValidator","stringvalidator","disallowspecial","alphValidator","numericValidator","floatNumberValidator","mackAddressValidator","gatewayAddressValidator","ipValidator","domainNameValidator","production","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch","err"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}